{"version":3,"sources":["serviceWorker.ts","shared/link-to-id.tsx","shared/external-link.tsx","envConfig.ts","shared/custom-code-theme.tsx","shared/code-tab.tsx","shared/api-example.tsx","shared/data-model-table.tsx","app/components/topics/introduction.tsx","app/components/topics/announcements.tsx","app/components/topics/change-log.tsx","app/components/topics/developer-preview.tsx","app/components/guides/data.ts","app/components/guides/advanced-tutorial.tsx","app/components/guides/basic-tutorial.tsx","app/components/guides/getting-started-with-oauth.tsx","app/components/guides/qualified-registries-and-qcdrs.tsx","app/components/guides/authorization-and-authentication.tsx","app/components/guides/submitting-to-submissions-api.tsx","app/components/references/data.ts","app/components/references/scoring.tsx","app/components/resources-and-support/frequently-asked-questions.tsx","app/routes.ts","app/components/references/measurements.tsx","app/components/references/measurement-sets.tsx","app/components/references/submissions.tsx","app/components/references/benchmarks.tsx","app/components/references/references.tsx","app/components/resources-and-support/help.tsx","app/components/resources-and-support/terms-of-service.tsx","app/components/header.tsx","history.ts","app/components/dropdown-nav.tsx","app/components/left-nav.tsx","app/components/footer.tsx","app/components/subscribe-modal.tsx","shared/lock-body-scroll.tsx","app/components/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","LinkToId","to","text","offset","attrs","includes","scroll","el","scrollIntoView","scrollBy","top","Number","behavior","ExternalLink","href","indexOf","slice","target","rel","envConfig","baseUrl","cmsUrl","qppEmail","qppCmsUrl","qppCmsPreviewUrl","cmsGithubIo","amazoneawsUrl","htmlRegex","phoneNumber","TTYPhoneNumber","chplHealthItUrl","customCodeTheme","lineNumberColor","lineNumberBgColor","backgroundColor","textColor","substringColor","keywordColor","attributeColor","selectorAttributeColor","docTagColor","nameColor","builtInColor","literalColor","bulletColor","codeColor","additionColor","regexpColor","symbolColor","variableColor","templateVariableColor","linkColor","selectorClassColor","typeColor","stringColor","selectorIdColor","quoteColor","templateTagColor","deletionColor","titleColor","sectionColor","commentColor","metaKeywordColor","metaColor","functionColor","numberColor","checkPreForHTML","code","test","dangerouslySetInnerHTML","__html","style","fontFamily","fontSize","background","color","language","showLineNumbers","codeBlock","theme","customStyle","CodeTab","data","useState","tab","selectedTab","setSelectedTab","id","map","i","className","onClick","response","buildTableBody","rows","row","classes","td","j","ApiExample","verb","url","checkTDforHTML","val","DataModelTable","h","name","value","description","notes","Introduction","marginTop","Announcements","submissionChangesTable","measuresChangeTable","buildTableHeader","date","change","textAlign","ChangeLog","DeveloperPreview","steps","advanced2","advanced3","advanced4","advanced5","basic1","basic2","apiExamples","measurementSetsId2","measurementsId","measurementSets","AdvancedTutorial","BasicTutorial","GettingStartedUsingQppOauth","tableData","endPoint","method","QualifiedRegistriesAndQcdrs","AuthenticationAndAuthorization","SubmittingToQppSubmissionApi","measurementSetPracticeDetails","measurementsTitleAndId","measurementsFields","fields","boolean","proportion","nonProportion","singlePerformanceRate","multiPerformanceRate","stratum","measurementsTabs","Object","entries","title","join","allCauseReadmission","cahps","measurementSetsFields","practiceDetails","measurementSetsTabs","submissionsFields","submissionsTabs","benchmarksFields","benchmarksTabs","scoringData","submissionJsonExampleStringIa","JSON","stringify","submissionJsonExampleIa","submissionJsonExampleStringAci","submissionJsonExampleAci","submissionJsonExampleStringQuality","submissionJsonExampleQuality","scoringJsonExampleStringIa","scoringJsonExampleIa","scoringJsonExampleStringAci","scoringJsonExampleAci","scoringJsonExampleStringQuality","scoringJsonExampleQuality","textAndId","sub","allPaths","groupTitle","paths","path","exact","linkText","component","AuthorizationAndAuthentication","Proportion","question","answer","combinedRoutes","reduce","acc","cur","forEach","p","push","Header","src","alt","createBrowserHistory","basename","withRouter","history","pathname","onChange","e","leftNavPaddingClasses","scrollToTop","left","LeftNav","Routes","toUpperCase","activeClassName","buildLinkListItem","Footer","openModal","data-toggle","data-target","SubscribeModal","closeModal","onModal","setOnModal","removeInClassAndClose","document","getElementById","classList","remove","setTimeout","add","useLayoutEffect","currentOverflowProp","getComputedStyle","body","overflow","tabIndex","role","aria-labelledby","onMouseEnter","onMouseLeave","type","data-dismiss","aria-label","aria-hidden","width","height","action","acceptCharset","htmlFor","App","showModal","setShowModal","appHistory","s","o","r","a","m","GoogleAnalyticsObject","q","arguments","l","Date","createElement","getElementsByTagName","async","parentNode","insertBefore","ga","listen","initGA","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de2d99df.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { HTMLAttributes } from 'react';\n\nimport { HashLink } from 'react-router-hash-link';\n\nexport const LinkToId = ({ to, text, offset = '1', attrs }: { to: string, text: string, offset?: string, attrs?: HTMLAttributes<{}> }) => {\n  return (\n    <HashLink\n      to={!to.includes('#') ? `${to}#${to}` : to}\n      scroll={el => {\n        el.scrollIntoView(true);\n        window.scrollBy({ top: -Number(offset), behavior: 'smooth' });\n      }}\n      {...attrs}\n    >\n      {text}\n    </HashLink>\n  );\n};\n","import React, { HTMLAttributes } from 'react';\n\nexport const ExternalLink = ({ href, text, attrs }: { href: string, text?: string, attrs?: HTMLAttributes<{}> }) => {\n  if (!text) {\n    switch (true) {\n      case href.indexOf('https:') === 0:\n        text = href.slice(8);\n        break;\n      case href.indexOf('http:') === 0:\n        text = href.slice(7);\n        break;\n      default:\n        text = href;\n    }\n  }\n\n  return (\n    <a\n      href={href}\n      target='_blank'\n      rel='noopener noreferrer'\n      {...attrs}\n    >\n      {text}\n    </a>\n  );\n};\n","const envConfig = {\n  baseUrl: '/qpp-submissions-docs',\n  cmsUrl: 'https://www.cms.gov',\n  qppEmail: 'QPP@cms.hhs.gov',\n  qppCmsUrl: 'https://qpp.cms.gov',\n  qppCmsPreviewUrl: 'https://preview.qpp.cms.gov',\n  cmsGithubIo: 'https://cmsgov.github.io',\n  amazoneawsUrl: 'https://qpp-cm-prod-content.s3.amazonaws.com',\n  htmlRegex: /<\\/?[a-z][\\s\\S]*>/i,\n  phoneNumber: '1-866-288-8292',\n  TTYPhoneNumber: '1-877-715-6222',\n  chplHealthItUrl: 'https://chpl.healthit.gov',\n};\n\nexport default envConfig;\n","export const customCodeTheme = {\n  lineNumberColor: `black`,\n  lineNumberBgColor: `black`,\n  backgroundColor: `white`,\n  textColor: `black`,\n  substringColor: `black`,\n  keywordColor: `black`,\n  attributeColor: `black`,\n  selectorAttributeColor: `black`,\n  docTagColor: `black`,\n  nameColor: `black`,\n  builtInColor: `black`,\n  literalColor: `black`,\n  bulletColor: `black`,\n  codeColor: `black`,\n  additionColor: `black`,\n  regexpColor: `black`,\n  symbolColor: `black`,\n  variableColor: `black`,\n  templateVariableColor: `black`,\n  linkColor: `black`,\n  selectorClassColor: `black`,\n  typeColor: `black`,\n  stringColor: `black`,\n  selectorIdColor: `black`,\n  quoteColor: `black`,\n  templateTagColor: `black`,\n  deletionColor: `black`,\n  titleColor: `black`,\n  sectionColor: `black`,\n  commentColor: `#04838a`,\n  metaKeywordColor: `black`,\n  metaColor: `black`,\n  functionColor: `black`,\n  numberColor: `black`,\n};","import React, { useState } from 'react';\n\nimport envConfig from '../envConfig';\n\nimport '../styles/shared/code-tab.scss';\n\nimport { CopyBlock } from 'react-code-blocks';\nimport { customCodeTheme } from './custom-code-theme';\n\nexport interface ICodeTab {\n  tab: string;\n  code: string;\n  response?: string;\n}\n\nconst showLineNumbers = false;\nconst codeBlock = true;\n\n// If the code block contains HTML, do not implement CopyBlock\nconst checkPreForHTML = (code: string) =>\n  envConfig.htmlRegex.test(code) ? (\n    <pre\n      dangerouslySetInnerHTML={{ __html: code }}\n      style={{\n        fontFamily: 'Menlo,Monaco,Consolas,\"Courier New\",monospace',\n        fontSize: '0.9rem',\n        background: 'white',\n        color: 'black',\n      }}\n    />\n  ) : (\n    <CopyBlock\n      text={code}\n      language={'typescript'}\n      {...{ showLineNumbers, codeBlock }}\n      theme={customCodeTheme}\n      customStyle={{\n        fontFamily: 'Menlo,Monaco,Consolas,\"Courier New\",monospace',\n        fontSize: '0.9rem',\n      }}\n    />\n  );\n\nexport const CodeTab = ({ data }: { data: ICodeTab[] }) => {\n  const [selectedTab, setSelectedTab] = useState(data[0].tab);\n\n  return (\n    <div id='code-tabs'>\n\n      {data.map(({ tab }, i) =>\n        <button\n          key={i}\n          className={`${selectedTab === tab ? 'selected' : ''} tab-button`}\n          onClick={() => setSelectedTab(tab)}\n        >\n          {tab}\n        </button>,\n      )}\n\n      {data.map(({ tab, code, response }, i) =>\n        <div\n          key={i}\n          className={`code-section ${selectedTab === tab ? 'show' : 'hide'}`}\n        >\n          {response &&\n            <>\n              <p>{tab} code:</p>\n              <pre>{response}</pre>\n            </>\n          }\n\n          <p>{tab} body:</p>\n          {checkPreForHTML(code)}\n        </div>,\n      )}\n\n    </div>\n  );\n};\n","import React from 'react';\n\nimport envConfig from '../envConfig';\n\nimport '../styles/shared/api-example.scss';\n\nexport interface IApiExample {\n  verb: string;\n  url: string;\n  rows?: IApiExampleTableBody[];\n}\n\n// the class will be applied to the td that is in the same array position as the row text\nexport interface IApiExampleTableBody {\n  row: string[];\n  classes?: string[];\n}\n\nconst buildTableBody = (rows: IApiExampleTableBody[]) =>\n  <tbody>\n    {rows.map(({ row, classes }, i) =>\n      <tr key={i}>\n        {row.map((td, j) =>\n          envConfig.htmlRegex.test(td)\n            ? <td key={j} className={classes && classes[j]} dangerouslySetInnerHTML={{ __html: td }} />\n            : <td key={j} className={classes && classes[j]}>{td}</td>,\n        )}\n      </tr>,\n    )}\n  </tbody>;\n\nexport const ApiExample = ({ data }: { data: IApiExample }) => {\n  const { verb, url, rows } = data;\n\n  return (\n    <div id='api-example'>\n\n      <div>\n        <span className='verb'>\n          <code>{verb}</code>\n        </span>\n        <span className='url'>\n          <code>{url}</code>\n        </span>\n      </div>\n\n      {rows &&\n        <table>{buildTableBody(rows)}</table>\n      }\n    </div>\n  );\n};\n","import React from 'react';\n\nimport envConfig from '../envConfig';\n\nexport interface IDataModelTable {\n  name: string;\n  value: string;\n  description: string;\n  notes: string;\n}\n\nconst checkTDforHTML = (val: string) =>\n  envConfig.htmlRegex.test(val)\n    ? <td dangerouslySetInnerHTML={{ __html: val }} />\n    : <td>{val}</td>;\n\nexport const DataModelTable = ({ data }: { data: IDataModelTable[] }) => {\n  return (\n    <>\n      <table className='ds-c-table ds-c-table--borderless ds-u-font-size--small'>\n        <thead>\n          <tr>\n            {['Property Name: Type', 'Description', 'Notes'].map((h, i) => <th key={i}>{h}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {data && data.map(({ name, value, description, notes }, i) =>\n            <tr key={i}>\n              <td><pre>{name}: {value}</pre></td>\n              {checkTDforHTML(description)}\n              {notes && checkTDforHTML(notes)}\n            </tr>,\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { ExternalLink } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst Introduction = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 12/05/2020</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Easily submit and score QPP data in real-time via API</h2>\n      <p className='ds-text'>\n        The Submissions API enables submissions and real-time performance scoring of Quality Payment Program (QPP) data.\n      </p>\n      <p className='ds-text'>\n        The Submissions API is a RESTful API. It has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. It uses standard HTTP features, like HTTPS authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients.\n      </p>\n      <p className='ds-text'>\n        The Submissions API supports cross-origin resource sharing, allowing you to interact securely with the API from a client-side web application (though you should never expose your secret API key in any public website's client-side code).\n      </p>\n      <p className='ds-text'>\n        API responses are returned in JSON, including errors.\n      </p>\n      <p className='ds-text'>\n        The base URL to submit Quality data using the API in Production is: <code>{`${envConfig.qppCmsUrl}/api/submissions`}</code>\n      </p>\n      <p className='ds-text'>\n        The base URL to submit LVT Opt-In decisions using the Eligibility API in Production is: <code>{`${envConfig.qppCmsUrl}/api/eligibility`}</code>\n      </p>\n\n      <h2 className='ds-h2'>Explore and integrate with the Submissions API</h2>\n      <p className='ds-text'>\n        To make the API as explorable as possible, we have <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs`} text='Interactive Documentation' />, which not only documents the endpoints available but also allows you to make requests to the API and see what response you would get. The Interactive Documentation is connected to the Developer Preview, which is an integration environment.\n      </p>\n      <p className='ds-text'>\n        The <ExternalLink href={`${envConfig.cmsGithubIo}/qpp-submissions-docs/developer-preview`} text='Developer Preview' /> environment is a testing environment open to CMS-approved Qualified Registries (\"registries\"), Qualified Clinical Data Registries (\"QCDRs\"), and Electronic Health Record applications. Participants in the Developer Preview can build integrations with their software to test submission and scoring of Quality Payment Program performance data via the Submissions API.\n      </p>\n      <p className='ds-text'>\n        Requests made in the Interactive Documentation and Developer Preview are not officially submitted to CMS.\n      </p>\n\n      <h2 className='ds-h2'>Stay Up To Date</h2>\n      <p className='ds-text'>\n        The developer documentation is a living document that is constantly maintained to stay in sync with policy, technical changes, and test data changes. Additionally we update the content to provide answers to frequently asked questions.  Please refer back to this regularly to keep aware of recent changes.\n      </p>\n      <p className='ds-text'>\n        Please bring any questions not answered by our available documentation to the monthly support calls/Virtual Office Hours, or contact the Quality Payment Program at {envConfig.phoneNumber}, Monday through Friday, 8:00 AM-8:00 PM ET or by e-mail at: <a href={`mailto:${envConfig.qppEmail}`}>{envConfig.qppEmail}</a>\n      </p>\n    </>\n  );\n};\n\nexport default Introduction;\n","import React from 'react';\n\nimport { ExternalLink, LinkToId } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst Announcements = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 06/08/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Announcements</h2>\n\n      <h3 className='ds-h3'>General</h3>\n      <p className='ds-text'>\n        See <ExternalLink href={`${envConfig.cmsGithubIo}/qpp-developer-preview-docs/announcements`} text='Developer Preview Announcements' />\n      </p>\n\n      <h3 className='ds-h3'>Submission API</h3>\n      <ul>\n        <li>\n          Updates for traditional MIPS submissions and scoring for PY 2021 are now available.\n          </li>\n        <li>\n          For APM participants only, APP submissions and scoring rules for PY2021 are now available.\n          </li>\n        <li>\n          PCF models that are required to report can now report to QPP.\n          </li>\n        <li>\n          See <LinkToId to='change-log' text='Change Log' /> for specific details.\n        </li>\n      </ul>\n\n      <h3 className='ds-h3'>Measures Repository</h3>\n      <ul>\n        <li>\n          2021 Measures are published and available here: <ExternalLink href='https://github.com/CMSgov/qpp-measures-data/tree/develop/measures' />\n          </li>\n        <li>\n          Additional attributes are added to support PY2021 submissions. See <LinkToId to='change-log' text='Change Log' /> for specific details.\n          </li>\n      </ul>\n    </>\n  );\n};\n\nexport default Announcements;\n","import React from 'react';\n\nimport envConfig from '../../../envConfig';\n\nconst submissionChangesTable = [\n  ['12/29/21', `<code>performanceRate</code> value validation - negative values are not allowed`, `\n    <ul>\n      <li>\n        Added validation when <code>metricType</code> = <code>registrySinglePerformanceRate</code> OR <code>registryMultiPerformanceRate</code>, then <code>performanceRate</code> is stored and represented as a percentage with a value between 0 and 100. A negative <code>performanceRate</code> value is not allowed.\n      </li>\n      <li>\n        For details, see <a href='${envConfig.cmsGithubIo}/qpp-submissions-docs/measurements#single-performance-rate-measurements' target='_blank' rel='noopener noreferrer'>Single-Performance Rate Measurements</a> and <a href='${envConfig.cmsGithubIo}/qpp-submissions-docs/measurements#multi-performance-rate-measurements' target='_blank' rel='noopener noreferrer'>Multi-Performance Rate Measurements</a>.\n      </li>\n    </ul>`],\n  ['11/22/21', 'Update to retrieve score by program name', `\n    <ul>\n      <li>\n        Updated the <code>GET /submissions/{id}/score</code> endpoint with the ability to filter results by program name using a query parameter.\n      </li>\n      <li>\n        For example, by querying the endpoint with <code>?program=mips</code>, the API returns all of the user's scores related to the MIPS program.\n      </li>\n      <li>\n        If no program is provided, the API returns the user's scores for all programs, which maintains legacy behavior.\n      </li>\n      <li>\n        See the <a href='https://preview.qpp.cms.gov/api/submissions/public/docs/#/Submissions/getSubmissionScore' target='_blank' rel='noopener noreferrer'>Submissions API Swagger Documentation</a> for more details.\n      </li>\n    </ul>`],\n  ['8/15/21', 'Updates for Y5 Traditional MIPS Submissions and Scoring for PY2021 are now supported.', `\n    <ul>\n      <li>\n        Added validation that only QCDR vendors who are approved by the QCDR measure Steward can submit that QCDR measure.\n      </li>\n      <li>\n        For PI category measurementSets, added validation so that the \"substitute\": measure(s) cannot be submitted with the original measure. This is because the substitute measure(s) replaces the original measure and both should not be submitted.\n      </li>\n      <li>\n        For PI category measurementSets, added validations so that PI can only be submitted where entityType = group or individual. (PI cannot be submitted for APM entities).\n      </li>\n      <li>\n        Reminder: Groups and Individuals who are LVT Opt-In eligible MUST make an Opt-In election <i>before</i> data can be submitted for them.\n      </li>\n    </ul>`],\n  ['8/15/21', 'For APM Participants, APP Submissions and Scoring for PY2021 are now supported.', `\n    <ul>\n      <li>\n        Added the ability to submit measurementSets to the APP program (<code>programName = app1</code>).\n      </li>\n      <li>\n        MeasurementSets can be submitted to the APP program for entityType(s) = apm, group, or individual. (Virtual Groups cannot submit to the APP program as they cannot be APM participants).\n      </li>\n      <li>\n        Only eligible APM participants are allowed to submit to the APP program. Includes: APM entities, Groups, and Individuals who are eligible APM participants.\n      </li>\n      <li>\n        Group or Individual APM participants MUST be above the LVT threshold OR they must be LVT Opt-In eligible and have elected to Opt-In to submit to the APP program.\n      </li>\n      <li>\n        Only the following 3 quality measures can be submitted to the APP program through the registry submissionMethod: 001, 134, 236.\n      </li>\n      <li>\n        See the <a href='${envConfig.cmsGithubIo}/qpp-developer-preview-docs/tutorial-app-submissions' target='_blank' rel='noopener noreferrer'>Tutorial: APP Submissions</a> for an example of how to submit to the APP.\n      </li>\n    </ul>`],\n  ['8/15/21', 'For APM participants who participate in the Primary Care First (PCF) APM model, PCF model requirement submissions for PY2021 are now supported.', `\n    <ul>\n      <li>\n        Added the ability to submit to the Primary Care First (PCF) program for entityType = apm. (The PCF program does not accept submissions for Groups, Individuals, or Virtual Groups.)\n      </li>\n      <li>\n        For measurementSets object, added new <code>programName = pcf</code>. (Note: for PCF submissions the programName can be upper or lowercase.)\n      </li>\n      <li>\n        For measurementSets object, added new optional attribute for practiceDetails which is a TIN and/or NPIs that the data is being submitted for. Optional: if provided, must follow the correct format for TINs and NPIs.\n      </li>\n      <li>\n        Quality measure ID 47 is required to be submitted to PCF through the registry measurementSet for PY 2021.\n      </li>\n      <li>\n        See the <a href='${envConfig.cmsGithubIo}/qpp-developer-preview-docs/tutorial-pcf-submissions' target='_blank' rel='noopener noreferrer'>Tutorial: PCF Submissions</a> for an example of how to submit to PCF.\n      </li>\n    </ul>`],\n    ['8/15/20', 'Add \"eligiblePopulationExclusion\" validation for CQM measures', `For \"category\": \"quality\" AND \"submissionMethod\": \"registry\" AND \"isRegistryMeasure\": \"false\", add validation so that \"eligiblePopulationExclusion\" MUST be 0 or NULL.  Note: Per the measure Specification, Registries should already have reduced the denominator for excluded populations. See details here:\n      <br><a href='${envConfig.cmsGithubIo}/qpp-submissions-docs/measurements#single-performance-rate-measurements' target='_blank' rel='noopener noreferrer'>Single Performance Rate Measurements</a>`],\n    ['8/15/20', 'Add \"exclusion\" validation for PI measures', `For \"category\": \"pi\", add validation so that the \"exclusion\": measure cannot be submitted in the same measurementSet as the original measure.  This is because the exclusion is attesting to the opposite condition as the original measure.  See details:\n    <br><a href='${envConfig.cmsGithubIo}/qpp-submissions-docs/measurements#boolean-measurements' target='_blank' rel='noopener noreferrer'>Boolean Measurements</a>\n    <br><a href='${envConfig.cmsGithubIo}/qpp-submissions-docs/measurements#proportion-measurements' target='_blank' rel='noopener noreferrer'>Proportion Measurements</a>`],\n    ['8/15/20', 'Support APM Entity ID submissions through \"submissionMethod\": \"registry\".', `\n    <ul>\n      <li>\n        All Submission API endpoints will now support \"entityType\": \"apm\" and \"entityId\": APM entity Id.  This is in addition to the entityTypes already supported.\n      </li>\n      <li>\n        LVT Opt-In elections for APMs is managed by AMS and as such the LVT Opt-In election cannot be made for the APM through QPP and only through AMS.  The Final Score process will take into account LVT Opt-In elections for the APM entity.  The Submissions API endpoints cannot enforce that an LVT Opt-In election has been made in AMS.  Thus there are no LVT Opt-In submission scenarios to test for apm entities.\n      </li>\n      <li>\n        An APM entityType will be able to submit the following types of measurementSets:\n        <ul>\n          <li>\n            \"category\": \"quality\" AND \"submissionMethod\": \"registry\" OR  \"submissionMethod\": \"electronicHealthRecord\" are allowed.\n          </li>\n          <li>\n            \"category\": \"ia\" are allowed.  Note: for \"category\": \"ia\" scoring rules for APMs are such that IA submissions are not necessary, as APMs will receive a 100% auto-credit for that category.\n          </li>\n          <li>\n            \"category\": \"pi\" is not allowed.  PI scores for the APM entity will be rolled up from the Group and Individual participants in the APM.  If you try to submit PI you will receive an error.\n          </li>\n        </ul>\n      </li>\n    </ul>`],\n];\nconst measuresChangeTable = [\n  ['8/15/21', `<code>allowedPrograms</code> is added to all quality Measures.`, `For <code>category: \"quality\"</code>, <code>allowedPrograms</code> is added to list the programs to which the measure <i>can</i> be submitted.`],\n  ['8/15/21', `<code>requiredForPrograms</code> is added to all quality Measures.`, `For <code>category: \"quality\"</code>, <code>requiredForPrograms</code> is added to list the programs to which the measure <i>must</i> be submitted.`],\n  ['8/15/21', `<code>allowedVendors</code> is added to all QCDR Measures.`, `For QCDR Measures (<code>isRegistryMeasure = true</code>), <code>allowedVendors</code> is added to list the VendorIDs that are allowed to submit that measure.`],\n  ['12/01/20', `<code>icdImpacted</code> added`, `List of submissionMethods where ICD 10 codes for the measure changed during the submission year. Used to truncate submissions data to only the first nine months of the performance year when the ICD 10 codes were unchanged. Typically impacts claims submissionMethod. Does not impact registry submissionMethod. Note: isIcdImpacted = \"true\" where at least one submission method is listed in \"icdImpacted\". Note: Added to the PY2020 and PY2021 Measures Repository schema.`],\n  ['12/01/20', `<code>benchmarks</code> array added, in the format <code>benchmarks:{ &ltsubmissionMethod&gt: \"removed\" }`, `List of submissionMethods where the measure is known to have changed from the previous performance year before the data collection period opens. Used to trigger removal of historical benchmarks as the meaning of the measure changed significantly from the previous Performance Year. Performance year benchmarks may still be generated once all submissions data is received. Note: Added only to the PY2021 Measures Repository schema.`],\n  ['8/15/20', `<code>isToppedOut</code> is removed.`, `For all Measures, <code>isToppedOut</code> attribute is removed and moved to the <code>/benchmarks</code> file`],\n  ['8/15/20', `<code>weight</code> attribute is removed for PI measures.`, 'Where <code>category: \"pi\"</code>, <code>weight</code> attribute is removed'],\n];\n\nconst buildTableHeader = () =>\n  <thead>\n    <tr>\n      {['Date', 'Change', 'Description'].map((h, i) => <th key={i}>{h}</th>)}\n    </tr>\n  </thead>;\n\nconst buildTableBody = (data: string[][]) =>\n  <tbody>\n    {data.map(([date, change, description], i) =>\n      <tr key={i}>\n        <td className='qpp-table-text-align' style={{textAlign: 'center'}}>{date}</td>\n        {envConfig.htmlRegex.test(change)\n          ? <td className='qpp-table-text-align' dangerouslySetInnerHTML={{ __html: change }} />\n          : <td className='qpp-table-text-align'>{change}</td>\n        }\n        {envConfig.htmlRegex.test(description)\n          ? <td className='qpp-table-text-align'  dangerouslySetInnerHTML={{ __html: description }} />\n          : <td className='qpp-table-text-align' >{description}</td>\n        }\n      </tr>,\n    )}\n  </tbody>;\n\nconst ChangeLog = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 01/21/2022</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}} id='change-log'>Change Log</h2>\n      <p className='ds-text'>\n        The Change log is updated with each significant change to the API with the details that you need to be aware of.\n      </p>\n\n      <h3 className='ds-h3'>Submission API</h3>\n      <table className='ds-c-table ds-u-font-size--small'>\n        {buildTableHeader()}\n        {buildTableBody(submissionChangesTable)}\n      </table>\n\n      <h3 className='ds-h3'>Measures Repository</h3>\n      <table className='ds-c-table ds-u-font-size--small'>\n        {buildTableHeader()}\n        {buildTableBody(measuresChangeTable)}\n      </table>\n    </>\n  );\n};\n\nexport default ChangeLog;\n","import React from 'react';\nimport { ExternalLink } from '../../../shared';\n\nimport envConfig from '../../../envConfig';\n\nconst DeveloperPreview = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 08/26/2020</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Developer Preview</h2>\n      <p className='ds-text'>\n        See updated documents <ExternalLink href={`${envConfig.cmsGithubIo}/qpp-developer-preview-docs`} text='Developer Preview Testing Environment' />\n      </p>\n    </>\n  );\n};\n\nexport default DeveloperPreview;\n","import { ICodeTab } from '../../../shared/code-tab';\nimport { IApiExample } from '../../../shared';\n\ninterface ISteps {\n  [k: string]: ICodeTab[];\n}\n\ninterface IApiExamples {\n  [k: string]: IApiExample;\n}\n\nexport const steps: ISteps = {\n  advanced2: [\n    {\n      tab: 'Request',\n      code: `{\n  \"submissionId\": \"086dad28-0477-4b41-8c05-77dd98d41d6f\",\n  \"measurements\": [\n    {\n      \"measureId\": \"001\",\n      \"value\": {\n        \"isEndToEndReported\": false,\n        \"performanceMet\": 36,\n        \"eligiblePopulationExclusion\": 0,\n        \"eligiblePopulationException\": 0,\n        \"performanceNotMet\": 120,\n        \"eligiblePopulation\": 156\n      }\n    }\n  ],\n  \"category\": \"quality\",\n  \"submissionMethod\": \"registry\",\n  \"performanceStart\": \"2021-01-01\",\n  \"performanceEnd\": \"2021-12-31\"\n}`,\n    },\n    {\n      tab: 'Response',\n      response: '201 Created',\n      code: `{\n  \"data\": {\n    \"measurementSet\": {\n      \"id\": \"086dad28-907a-4e88-af73-5c7ed2e6764e\",\n      \"createdAt\": \"2021-06-25T15:18:00Z\",\n      \"updatedAt\": \"2021-06-25T15:35:08Z\",\n      \"submissionId\": \"086dad28-0477-4b41-8c05-77dd98d41d6f\",\n      \"category\": \"quality\",\n      \"submissionMethod\": \"registry\",\n      \"measureSet\": null,\n      \"submitterId\": \"12c6258f-86db-492c-8637-4ff2668164b5\",\n      \"submitterType\": \"organization\",\n      \"programName\": \"mips\",\n      \"practiceId\": null,\n      \"practiceDetails\": null,\n      \"cehrtId\": null,\n      \"suppressed\": false,\n      \"source\": null,\n      \"performanceStart\": \"2021-01-01\",\n      \"performanceEnd\": \"2021-12-31\",\n      \"measurements\": [\n        {\n          \"id\": \"086db12c-490d-484d-8c7a-1d378bf0a71f\",\n          \"measurementSetId\": \"086dad28-907a-4e88-af73-5c7ed2e6764e\",\n          \"measureId\": \"001\",\n          \"value\": {\n            \"isEndToEndReported\": false,\n            \"performanceMet\": 36,\n            \"eligiblePopulationExclusion\": 0,\n            \"eligiblePopulationException\": 0,\n            \"performanceNotMet\": 120,\n            \"eligiblePopulation\": 156,\n            \"reportingRate\": 100,\n            \"performanceRate\": 23.08\n          }\n        },\n        {\n          \"id\": \"086dad28-4bcb-4649-a4fd-04ad8426df77\",\n          \"measurementSetId\": \"086dad28-907a-4e88-af73-5c7ed2e6764e\",\n          \"measureId\": \"047\",\n          \"value\": {\n            \"isEndToEndReported\": false,\n            \"performanceMet\": 12,\n            \"eligiblePopulationExclusion\": 0,\n            \"eligiblePopulationException\": 0,\n            \"performanceNotMet\": 61,\n            \"eligiblePopulation\": 156,\n            \"reportingRate\": 46.79,\n            \"performanceRate\": 16.44\n          }\n        }\n      ]\n    }\n  }\n}`,\n    },\n  ],\n  advanced3: [\n    {\n      tab: 'Response',\n      response: '200 OK',\n      code: `{\n  \"data\": {\n    \"score\": {\n      \"name\": \"total\",\n      \"title\": \"Total Score\",\n      \"detail\": \"0.45.0\",\n      \"value\": 15,\n      \"parts\": [\n        {\n          \"name\": \"ia\",\n          \"title\": \"IA component of total score\",\n          \"detail\": \"Scoring based on weight of 15%.\",\n          \"value\": 15,\n          \"original\": {\n            \"name\": \"ia\",\n            \"value\": 40,\n            \"detail\": \"Picked the highest scoring measurement set registry\",\n            \"parts\": [\n              {\n                \"name\": \"ia\",\n                \"value\": 40,\n                \"title\": \"Improvement Activities Score\",\n                \"detail\": \"registry\",\n                \"parts\": [\n                  {\n                    \"name\": \"IA_EPA_3\",\n                    \"title\": \"Collection and use of patient experience and satisfaction data on access\",\n                    \"value\": 20,\n                    \"metadata\": {\n                      \"measurementId\": \"0313d5c6-1a2d-4564-9ac3-d006bf03efac\",\n                      \"maxContribution\": 40,\n                      \"weight\": \"medium\"\n                    }\n                  },\n                  {\n                    \"name\": \"IA_EPA_4\",\n                    \"title\": \"Additional improvements in access as a result of QIN/QIO TA\",\n                    \"value\": 20,\n                    \"metadata\": {\n                      \"measurementId\": \"0313d351-10bd-4419-a593-ece163a67520\",\n                      \"maxContribution\": 40,\n                      \"weight\": \"medium\"\n                    }\n                  }\n                ],\n                \"metadata\": {\n                  \"messages\": {},\n                  \"maxContribution\": 40,\n                  \"measurementSetId\": \"0313d351-a094-4dc2-b632-23cd88bffb5e\",\n                  \"measurementSetPicked\": true\n                }\n              }\n            ]\n          },\n          \"metadata\": {\n            \"unroundedScoreValue\": 15,\n            \"maxContribution\": 15\n          }\n        }\n      ],\n      \"metadata\": {\n        \"messages\": {},\n        \"maxTotalScore\": 100,\n        \"maxHighContributionIA\": 40,\n        \"maxMediumContributionIA\": 20,\n        \"maxContributionIA\": 15,\n        \"maxContributionACI\": 25,\n        \"maxContributionQuality\": 60,\n        \"maxContributionCost\": 0\n      },\n      \"warnings\": [\n        \"Disclaimer: Scoring is subject to change, based on periodic policy updates, eligibility reviews, and technical integration developments.\"\n      ],\n      \"errors\": []\n    }\n  }\n}`},\n  ],\n  advanced4: [\n    {\n      tab: 'Request',\n      code: `{\n  \"measurementSetId\": \"0313d351-a094-4dc2-b632-23cd88bffb5e\",\n  \"measureId\": \"IA_EPA_4\",\n  \"value\": false\n}`,\n    },\n    {\n      tab: 'Response',\n      response: '200 OK',\n      code: `{\n  \"data\": {\n    \"measurement\": {\n      \"id\": \"0313d351-10bd-4419-a593-ece163a67520\",\n      \"measurementSetId\": \"0313d351-a094-4dc2-b632-23cd88bffb5e\",\n      \"measureId\": \"IA_EPA_4\",\n      \"value\": false,\n      \"performanceStart\": null,\n      \"performanceEnd\": null\n    }\n  }\n}`,\n    },\n  ],\n  advanced5: [\n    {\n      tab: 'Response',\n      response: '200 OK',\n      code: `{\n  \"data\": {\n    \"score\": {\n      \"name\": \"total\",\n      \"title\": \"Total Score\",\n      \"detail\": \"0.45.0\",\n      \"value\": 7.5,\n      \"parts\": [\n        {\n          \"name\": \"ia\",\n          \"title\": \"IA component of total score\",\n          \"detail\": \"Scoring based on weight of 15%.\",\n          \"value\": 7.5,\n          \"original\": {\n            \"name\": \"ia\",\n            \"value\": 20,\n            \"detail\": \"Picked the highest scoring measurement set registry\",\n            \"parts\": [\n              {\n                \"name\": \"ia\",\n                \"value\": 20,\n                \"title\": \"Improvement Activities Score\",\n                \"detail\": \"registry\",\n                \"parts\": [\n                  {\n                    \"name\": \"IA_EPA_3\",\n                    \"title\": \"Collection and use of patient experience and satisfaction data on access\",\n                    \"value\": 20,\n                    \"metadata\": {\n                      \"measurementId\": \"0313d5c6-1a2d-4564-9ac3-d006bf03efac\",\n                      \"maxContribution\": 40,\n                      \"weight\": \"medium\"\n                    }\n                  }\n                ],\n                \"metadata\": {\n                  \"messages\": {},\n                  \"maxContribution\": 40,\n                  \"measurementSetId\": \"0313d351-a094-4dc2-b632-23cd88bffb5e\",\n                  \"measurementSetPicked\": true\n                }\n              }\n            ]\n          },\n          \"metadata\": {\n            \"unroundedScoreValue\": 7.5,\n            \"maxContribution\": 15\n          }\n        },\n        {\n          \"name\": \"feedback-ia\",\n          \"parts\": [\n            {\n              \"name\": \"ia-feedback-message\",\n              \"detail\": \"You could achieve full credit for this category by submitting 1 additional Medium Weighted Activity.\"\n            },\n            {\n              \"name\": \"ia-feedback-message\",\n              \"detail\": \"You could achieve full credit for this category by submitting 1 additional High Weighted Activity.\"\n            }\n          ]\n        }\n      ],\n      \"metadata\": {\n        \"messages\": {},\n        \"maxTotalScore\": 100,\n        \"maxHighContributionIA\": 40,\n        \"maxMediumContributionIA\": 20,\n        \"maxContributionIA\": 15,\n        \"maxContributionACI\": 25,\n        \"maxContributionQuality\": 60,\n        \"maxContributionCost\": 0\n      },\n      \"warnings\": [\n        \"Disclaimer: Scoring is subject to change, based on periodic policy updates, eligibility reviews, and technical integration developments.\"\n      ],\n      \"errors\": []\n    }\n  }\n}`,\n    },\n  ],\n  basic1: [\n    {\n      tab: 'Request',\n      code: `{\n  \"category\": \"quality\",\n  \"submissionMethod\": \"registry\",\n  \"performanceStart\": \"2021-01-01\",\n  \"performanceEnd\": \"2021-12-31\",\n  \"programName\": \"mips\",\n  \"submission\": {\n    \"entityType\": \"group\",\n    \"taxpayerIdentificationNumber\": \"000000002\",\n    \"performanceYear\": 2021\n  },\n  \"measurements\": [\n    {\n      \"measureId\": \"047\",\n      \"value\": {\n        \"isEndToEndReported\": false,\n        \"performanceMet\": 120,\n        \"eligiblePopulationExclusion\": 0,\n        \"eligiblePopulationException\": 0,\n        \"performanceNotMet\": 36,\n        \"eligiblePopulation\": 156\n      }\n    }\n  ]\n}`,\n    },\n    {\n      tab: 'Response',\n      response: '201 Created',\n      code: `{\n  \"data\": {\n    \"measurementSet\": {\n      \"id\": \"086dad28-907a-4e88-af73-5c7ed2e6764e\",\n      \"createdAt\": \"2021-06-25T15:18:00Z\",\n      \"updatedAt\": \"2021-06-25T15:18:00Z\",\n      \"submissionId\": \"086dad28-0477-4b41-8c05-77dd98d41d6f\",\n      \"category\": \"quality\",\n      \"submissionMethod\": \"registry\",\n      \"measureSet\": null,\n      \"submitterId\": \"12c6258f-86db-492c-8637-4ff2668164b5\",\n      \"submitterType\": \"organization\",\n      \"programName\": \"mips\",\n      \"practiceId\": null,\n      \"practiceDetails\": null,\n      \"cehrtId\": null,\n      \"suppressed\": false,\n      \"source\": null,\n      \"performanceStart\": \"2021-01-01\",\n      \"performanceEnd\": \"2021-12-31\",\n      \"measurements\": [\n        {\n          \"id\": \"086dad28-4bcb-4649-a4fd-04ad8426df77\",\n          \"measurementSetId\": \"086dad28-907a-4e88-af73-5c7ed2e6764e\",\n          \"measureId\": \"047\",\n          \"value\": {\n            \"isEndToEndReported\": false,\n            \"performanceMet\": 12,\n            \"eligiblePopulationExclusion\": 0,\n            \"eligiblePopulationException\": 0,\n            \"performanceNotMet\": 61,\n            \"eligiblePopulation\": 156,\n            \"reportingRate\": 46.79,\n            \"performanceRate\": 16.44\n          }\n        }\n      ]\n    },\n    \"warnings\": []\n  }\n}`,\n    },\n  ],\n  basic2: [\n    {\n      tab: 'Response',\n      response: '200 OK',\n      code: `{\n  \"data\": {\n    \"score\": {\n      \"name\": \"total\",\n      \"title\": \"Total Score\",\n      \"detail\": \"13.3.0\",\n      \"value\": 4.405,\n      \"parts\": [\n        {\n          \"name\": \"quality\",\n          \"title\": \"QUALITY component of total score\",\n          \"detail\": \"Scoring based on weight of 45%.\",\n          \"value\": 4.405,\n          \"original\": {\n            \"name\": \"quality\",\n            \"value\": 9.7888,\n            \"detail\": \"Picked the highest scoring measurement set registry\",\n            \"parts\": [\n              {\n                \"name\": \"quality\",\n                \"value\": 9.7888,\n                \"detail\": \"registry\",\n                \"parts\": [\n                  {\n                    \"detail\": \"Contributing 5.8733\",\n                    \"metadata\": {\n                      \"highPriorityBonus\": 0,\n                      \"highPriorityBonusIgnored\": true,\n                      \"decileScore\": 5.8733,\n                      \"benchmarkType\": \"registry\",\n                      \"performanceRate\": 76.9231,\n                      \"reportingRate\": 100,\n                      \"measureClass\": \"Class 1\",\n                      \"measureTitle\": \"Advance Care Plan\",\n                      \"highPriorityBonusEligible\": true,\n                      \"endToEndBonusEligible\": false,\n                      \"endToEndBonus\": 0,\n                      \"outcomeOrPatientExperienceBonus\": 0,\n                      \"performanceDenominator\": 156,\n                      \"performanceNumerator\": 120,\n                      \"eligiblePopulation\": 156,\n                      \"partialDecileScore\": 0.8733,\n                      \"partialPoints\": 40.7731,\n                      \"decile\": 5,\n                      \"deciles\": [ ... ],\n                      \"processingStatus\": \"PICKED\",\n                      \"totalMeasurementPoints\": 5.8733,\n                      \"totalBonusPoints\": 0,\n                      \"messages\": {\n                        \"measurementClass\": \"Eligible population is greater than or equal to 20, reporting rate is greater than 70% and has benchmarks\",\n                        \"e2eBonusScore\": \"Default E2E bonus score\",\n                        \"highPriorityBonus\": \"Measure having highest decile score is not eligible for high priority bonus\",\n                        \"measurementPicker\": \"Picked at 1\",\n                        \"totalMeasurementPoints\": \"Measurement points for PICKED measure include decile score with all bonus points\"\n                      },\n                      \"noBenchmarks\": false,\n                      \"eMeasureId\": null,\n                      \"toppedOut\": false,\n                      \"isGhost\": false,\n                      \"performanceStart\": \"2021-01-01\",\n                      \"performanceEnd\": \"2021-12-31\",\n                      \"isCpcPlus\": false,\n                      \"skippedDuplicate\": false,\n                      \"unroundedScoreValue\": 5.8733\n                    },\n                    \"name\": \"047\",\n                    \"value\": 5.8733,\n                    \"instrumentations\": [\n                      \"QUALITY-009\",\n                      \"QUALITY-051\",\n                      \"QUALITY-078\",\n                      \"QUALITY-091\",\n                      \"QUALITY-093\",\n                      \"QUALITY-111\",\n                      \"QUALITY-113\",\n                      \"QUALITY-117\",\n                      \"QUALITY-005\"\n                    ]\n                  }\n                ],\n                \"instrumentations\": [\n                  \"QUALITY-031\",\n                  \"QUALITY-032\",\n                  \"QUALITY-060\",\n                  \"QUALITY-025\",\n                  \"QUALITY-026\",\n                  \"QUALITY-061\",\n                  \"QUALITY-071\",\n                  \"QUALITY-101\",\n                  \"QUALITY-116\"\n                ],\n                \"metadata\": {\n                  \"messages\": {\n                    \"denominator\": \"At least 1 high or outcome or patient experience measure available. So denominator is 60.\",\n                    \"totalDecileScore\": \"Decile score points for measurements included in measurement set score, excluding bonus points\",\n                    \"totalBonusPoints\": \"Sum of measurement bonus points included in the measurement set score\",\n                    \"totalMeasurementPoints\": \"Sum of applicable measurement points.\",\n                    \"picked\": \"Measurement set selected for category score.\"\n                  },\n                  \"maxContribution\": 100,\n                  \"measuresPicked\": [\n                    \"047\"\n                  ],\n                  \"measuresSubmittedCount\": 1,\n                  \"measuresSubmitted\": [\n                    \"047\"\n                  ],\n                  \"totalDecileScore\": 5.8733,\n                  \"totalBonusPoints\": 0,\n                  \"totalMeasurementPoints\": 5.8733,\n                  \"denominator\": 60,\n                  \"e2eBonusScore\": 0,\n                  \"maxMeasurementsAllowed\": 6,\n                  \"mergedWithCahps\": false,\n                  \"processingStatus\": \"PICKED\",\n                  \"smallPracticeBonusEligible\": false,\n                  \"smallPracticeBonus\": 0,\n                  \"dataCompletenessExemption\": false,\n                  \"qualityAutocredit\": 0,\n                  \"unroundedScoreValue\": 5.8733,\n                  \"measurementSetPicked\": true,\n                  \"reweightedScore\": 4.405\n                }\n              }\n            ],\n            \"metadata\": {\n              \"unroundedScoreValue\": 9.788833333333335\n            },\n            \"instrumentations\": [\n              \"QUALITY-031\",\n              \"QUALITY-032\",\n              \"QUALITY-060\",\n              \"QUALITY-025\",\n              \"QUALITY-026\",\n              \"QUALITY-061\",\n              \"QUALITY-071\",\n              \"QUALITY-101\",\n              \"QUALITY-116\"\n            ],\n            \"warnings\": null\n          },\n          \"metadata\": {\n            \"maxContribution\": 45,\n            \"unroundedScoreValue\": 4.404975\n          }\n        },\n        {\n          \"name\": \"feedback-quality\",\n          \"parts\": [\n            {\n              \"name\": \"047\",\n              \"detail\": \"Focus on improving measure 047\"\n            }\n          ]\n        },\n        {\n          \"name\": \"bonuses\",\n          \"value\": 0,\n          \"parts\": []\n        }\n      ],\n      \"instrumentations\": [],\n      \"metadata\": {\n        \"messages\": {},\n        \"maxTotalScore\": 100,\n        \"maxHighContributionIA\": 20,\n        \"maxMediumContributionIA\": 10,\n        \"maxContributionIA\": 15,\n        \"maxContributionQuality\": 45,\n        \"maxContributionCost\": 15,\n        \"maxContributionPI\": 25,\n        \"piRollupBase\": 0,\n        \"piRollupBonus\": 0,\n        \"iaCategoryScoreUnrounded\": 0,\n        \"iaCategoryScore\": 0,\n        \"iaWeightedScore\": 0,\n        \"qualityImprovementBonus\": 0,\n        \"previousYearQualityScore\": 0,\n        \"previousYearNumerator\": 0,\n        \"previousYearDenominator\": 0,\n        \"qualityCategoryScoreUnrounded\": 9.788833333333335,\n        \"qualityCategoryScore\": 9.7888,\n        \"qualityWeightedScore\": 4.405,\n        \"isSubmissionFabricated\": true,\n        \"hasIAMeasures\": false,\n        \"hasQualityMeasures\": true,\n        \"hasACIMeasures\": false,\n        \"hasPIMeasures\": false,\n        \"hasCostMeasures\": false,\n        \"hasACRMeasure\": false,\n        \"hasCAHPSMeasure\": false,\n        \"hasScorableIAMeasures\": false,\n        \"hasScorableACIMeasures\": false,\n        \"hasScorablePIMeasures\": false,\n        \"hasScorableCostMeasures\": false,\n        \"hasScorableQualityMeasures\": true,\n        \"numberOfCategoriesHavingExternalMeasures\": 1,\n        \"hasSkippedWIMSet\": false,\n        \"hasMergedRegistryMSet\": false,\n        \"givenIAStudyCredit\": false,\n        \"hasIAWeightStatus\": \"NORMAL\",\n        \"givenAPMParticipationCredit\": false,\n        \"givenIACreditPCMH\": false,\n        \"hasClaimsOnlyMeasures\": false,\n        \"hasMinimumACIPerformancePeriod\": false,\n        \"hasMinimumPIPerformancePeriod\": false,\n        \"hasIncompleteAPMWISubmission\": false,\n        \"qualityReweighted\": false,\n        \"piReweighted\": false,\n        \"iaReweighted\": false,\n        \"costReweighted\": true,\n        \"unroundedScoreValue\": 4.404975,\n        \"runtimeInMillis\": 4.176\n      },\n      \"warnings\": [\n        \"Disclaimer: Scoring is subject to change, based on periodic policy updates, eligibility reviews, and technical integration developments.\"\n      ],\n      \"errors\": []\n    }\n  }\n}`,\n    },\n  ],\n};\n\nexport const apiExamples: IApiExamples = {\n  measurementSetsId2: {\n    verb: 'PATCH',\n    url: '/measurement-sets/:id',\n    rows: [\n      {\n        row: ['Submission ID', '086dad28-0477-4b41-8c05-77dd98d41d6f'],\n      },\n      {\n        row: ['Measurement Set ID', '086dad28-907a-4e88-af73-5c7ed2e6764e'],\n      },\n      {\n        row: ['Category', 'Quality'],\n      },\n      {\n        row: ['Submission Method', 'Registry'],\n      },\n      {\n        row: ['Performance Start', '2021-01-01'],\n      },\n      {\n        row: ['Performance End', '2021-12-31'],\n      },\n      {\n        row: ['Measurements'],\n        classes: ['nested-once'],\n      },\n      {\n        row: ['Measure <code>001</code>', '<code>true</code>'],\n        classes: ['nested-twice'],\n      },\n    ],\n  },\n  measurementsId: {\n    verb: 'PATCH',\n    url: '/measurements/:id',\n    rows: [\n      {\n        row: ['Measurement ID', '0313d5c6-1a2d-4564-9ac3-d006bf03efac'],\n      },\n      {\n        row: ['Measurement Set ID', '0313d351-a094-4dc2-b632-23cd88bffb5e'],\n      },\n      {\n        row: ['Measure <code>IA_EPA_4</code>', '<code>false</code>'],\n      },\n    ],\n  },\n  measurementSets: {\n    verb: 'POST',\n    url: '/measurement-sets',\n    rows: [\n      {\n        row: ['Entity', 'Group'],\n      },\n      {\n        row: ['Taxpayer Identification Number', '000000002'],\n      },\n      {\n        row: ['Performance Year', '2021'],\n      },\n    ],\n  },\n};\n","import React from 'react';\n\nimport { CodeTab, LinkToId, ExternalLink, ApiExample } from '../../../shared';\nimport { steps, apiExamples } from './data';\nimport envConfig from '../../../envConfig';\n\nimport '../../../styles/components/tutorial.scss';\n\nconst AdvancedTutorial = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 08/26/2020</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}} id='advanced-tutorial'>Tutorial: Add and update data via API</h2>\n      <p>\n        In the <LinkToId to='tutorial' text='first tutorial' /> we covered how to create a measurement set and retrieve the score in two different API requests. We're now going to build on the previous tutorial by adding another measure to the measurement set we created in the previous tutorial. All of these examples serve to illustrate how the Submissions API can make it easier to react to and fix issues that arise.\n      </p>\n\n      <h3 className='tutorial-header-link' id='add-more-measures'>Add more measures to an existing measurement set</h3>\n      <p>\n        Here's a <code>PATCH</code> request to add more measures to an existing measurement set. You can pass an <code>Accept</code> header to specify the API version and the desired response format by using our custom mime type, <code>application/vnd.qpp.cms.gov.v1+json</code>. We support JSON by using <code>+json</code>. You can also continue to use a standard <code>application/json</code> header, which will point to the latest version. Check out the response and request below!\n      </p>\n      <ApiExample data={apiExamples.measurementSetsId2} />\n      <CodeTab data={steps.advanced2} />\n\n      <h3>Next steps</h3>\n      <p>\n        While we've used each API endpoint, we're far from having used every kind of API action. These tutorials have used <code>POST</code>, <code>PATCH</code>, and <code>GET</code> - there are also <code>PUT</code> and <code>DELETE</code> for the measurementSet and measurement resources.\n      </p>\n      <p>\n        The tutorials have shown how requests can be strung together to complete complex workflows in minutes rather than months.\n      </p>\n      <p>\n        Now, try using the <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs`} text='Interactive Docs' /> to experiment with some of your data.\n      </p>\n    </>\n  );\n};\n\nexport default AdvancedTutorial;\n","import React from 'react';\n\nimport { ExternalLink, CodeTab, ApiExample, LinkToId } from '../../../shared';\nimport envConfig from '../../../envConfig';\nimport { steps, apiExamples } from './data';\n\nconst BasicTutorial = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 07/01/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Tutorial: Create and Score Data via API</h2>\n      <p>\n        The Submissions API is an easy way to manage your performance data with CMS. Performance data is organized into submissions, which can have many measurements. Measurements within a submission are also grouped by category (e.g. quality) and submission method (e.g. registry) and program name (e.g. mips) into measurement sets.\n      </p>\n      <p>\n        Since the API and scoring logic are updated on a regular basis as per the annual publication of the QPP Final Rule, please use the <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs`} text='Interactive Docs' /> and the Developer Preview Testing Environment as they will be updated annually to reflect the QPP Final Rule.\n      </p>\n      <p>\n        Let's walk through an example of how you might submit performance data as a registry API user!\n      </p>\n\n      <h3 className='ds-h3' id='creating-a-measurement-set'>Create a new measurement set</h3>\n      <p>\n        We need to create a <em>measurement set</em> first. We can do that by asking the API to create a measurement set record in the CMS database. In API terms, this means making a <code>POST</code> (synonym for <em>create</em>) request to the <code>/measurement-sets</code> endpoint.\n      </p>\n      <p>\n        When submitting, you can pass an <code>Accept</code> header to specify the API version and type of response back by using our custom mime type, <code>application/vnd.qpp.cms.gov.v1+json</code>. We support JSON by using <code>+json</code>. Right now, only version <code>v1</code> is supported. You can also continue to use a standard <code>application/json</code> header, which will point to the latest version.\n      </p>\n      <p>\n        We'll also need to supply some information to tell CMS how to identify this particular submission, which you can see below. Every submission is unique to the combination of the fields provided. Note that we enforce fake TINs (starting with <code>000</code>) in the Developer Preview Testing Environment to avoid accidentally collecting personally identifiable information.\n      </p>\n      <p>\n        Take a look at the request below, and then click the 'Response' tab to see what the API returns when we submit this request!\n      </p>\n      <ApiExample data={apiExamples.measurementSets} />\n      <CodeTab data={steps.basic1} />\n\n      <h3 className='ds-h3' id='scoring-a-submission'>Scoring a submission</h3>\n      <p>\n        With the submission <code>id</code> we were given, we can ask the API to calculate the submission score with a GET request. We don't need to include a request body this time since we're only interested in retrieving the score, and CMS doesn't need any information other than the submission <code>id</code>.\n      </p>\n      <ApiExample data={{verb: 'GET', url: '/submissions/:id/score'}} />\n      <CodeTab data={steps.basic2} />\n\n      <p>\n        In general, we can think about the Submissions API as a way to have a live conversation with CMS about performance measurements. Rather than waiting months to hear back about missing information or a score, the API gives us feedback that is immediate, specific, and actionable - we can easily make another API request if necessary.\n      </p>\n      <p>\n        What we've shown is an example of working directly with the API - typically these requests are made through a web interface or script, but the requests &amp; responses above illustrate the kind of power and speed the Submissions API and applications built against it can provide.\n      </p>\n      <p>\n        <em>Disclaimer:</em> Scoring is subject to change, based on periodic policy updates, eligibility reviews, and technical integration developments.\n      </p>\n\n      <h3>Next steps</h3>\n      <p>\n        Updating and correcting performance data is also easy - avoid losing time by solving issues as they arise, rather than reacting months later. Go to <LinkToId to='advanced-tutorial' text='Tutorial: Add and Update data via API' offset='130' /> to see how you can update a measurement set that you've previously submitted.\n      </p>\n    </>\n  );\n};\n\nexport default BasicTutorial;\n\n","import React from 'react';\n\nimport { ExternalLink } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst GettingStartedUsingQppOauth = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 07/16/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Getting Started Using QPP OAuth</h2>\n      <p className='ds-text'>\n        Using OAuth with the Submissions API allows QPP participants to use their own QPP credentials to login through your application to submit their data to and view performance feedback from QPP.\n        </p>\n\n      <h2 className='ds-h2' id='oauth'>Using OAuth in the Developer Preview</h2>\n      <p className='ds-text'>\n        To use the QPP Submissions API with OAuth, you must create a Developer Preview account and register the application.\n      </p>\n      <p className='ds-text'>\n        Create an account for Developer Preview at <ExternalLink href={envConfig.qppCmsPreviewUrl} />.\n      </p>\n\n      <h3 className='ds-h3'>Connect to EHR or reporting application</h3>\n      <p className='ds-text'>\n        Log in to Developer Preview (<ExternalLink href={envConfig.qppCmsPreviewUrl} />).\n      </p>\n      <p className='ds-text'>\n        Locate your EHR (search by the EHR name as it appears in the <ExternalLink href={envConfig.chplHealthItUrl} text='CHPL database' />).\n      </p>\n      <p className='ds-text'>\n        If you cannot locate your EHR or are a registry user, create one manually.\n      </p>\n      <p className='ds-text'>\n        After requesting the role, it may take a few minutes to populate.\n      </p>\n\n      <h3 className='ds-h3'>Register an Application</h3>\n      <p className='ds-text'>\n        Once you are connected, you can use the OAuth APIs directly on the <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/auth/docs/#/OAuth`} text='Auth API' />. Also, Development Preview contains a UI (<ExternalLink href={`${envConfig.qppCmsPreviewUrl}/user/applications`} text='here' />) where you can create and manage your OAuth applications.\n      </p>\n      <p className='ds-text'>\n        Registering and testing your application within the Developer Preview is required prior to being granted production OAuth access.\n      </p>\n      <p className='ds-text'>\n        To register the application, you will need:\n      </p>\n      <ul>\n        <li>Application name</li>\n        <li>Application URL</li>\n        <li>Logo URI</li>\n        <li>Client Type</li>\n        <li>Redirect URIs</li>\n        <li>\n          Terms of Service and Privacy Policy are optional for the test environment, but required for production.\n        </li>\n      </ul>\n      <p className='ds-text'>\n        In the test environment, a registered application is assigned a client ID and, if applicable, a client secret. The secret should only be used if it can be kept confidential, such as for communication between your server and the Submissions API.\n      </p>\n      <p className='ds-text'>\n        Additional support along with a sample OAuth Client, can be found in the QPP Github at: <ExternalLink href='https://github.com/CMSgov/qpp-submissions-docs/tree/master/oauth_sample' />.\n      </p>\n\n      <h2 className='ds-h2' id='create-user'>Create test users in the Developer Preview</h2>\n      <p className='ds-text'>\n        To support Developer Preview integration and testing, we created the <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/data-faker/synthetic-data/docs/index.html`} text='Test Data Service' />. Using this API, you can reserve specific scenarios in the Test Data Service to test granting access to their QPP authorizations and try out different special scoring scenarios. Please visit the Interactive Documentation to learn more about setting up test users in Developer Preview.\n      </p>\n\n      <h2 className='ds-h2' id='production-api-access'>Production API Access</h2>\n      <p className='ds-text'>\n        To submit data via OAuth and the Submissions API during the submission window, your application must be approved for production use by QPP. To apply for production access, you must demonstrate your application to QPP and attest that your organization:\n      </p>\n      <ul>\n        <li>Is a US-based company</li>\n        <li>Agrees to CMS API Terms of Use</li>\n        <li>Participated in the CMS QPP Submissions API Developer Preview</li>\n      </ul>\n      <p className='ds-text'>\n        You will also be asked to provide:\n      </p>\n      <ul>\n        <li>A company website</li>\n        <li>A point of contact</li>\n        <li>URL to Application Privacy or Terms of Use</li>\n      </ul>\n      <p className='ds-text'>\n        To request production access, please email the QPP Help Desk at QPP@cms.hhs.gov to set up a demonstration with the QPP team.\n      </p>\n    </>\n  );\n};\n\nexport default GettingStartedUsingQppOauth;\n\n","import { LinkToId, ExternalLink } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst tableData = [\n  {\n    endPoint: '/submissions',\n    method: 'GET',\n    description: `<p>Returns all submissions that you have submitted measurement sets for, and within those submissions, returns only the measurement sets that you have  submitted. If <code>qpp-taxpayer-identification-number</code> is specified in the header as a query parameter, and you haven't submitted any measurement sets for the specified TIN, this endpoint returns a submission object with an empty measurement sets array.</p><p>A Registry token is allowed to see only the measurementSets and measurements that were submitted by that Registry.  A Registry token cannot see quality data submitted through other submissionMethods.</p>`,\n  },\n  {\n    endPoint: '/submissions',\n    method: 'POST',\n    description: `Returns '401 Unauthorized'. <code>POST /submissions</code> are not allowed, as once a submission object is created for an entity (TIN, TIN+NPI, entityID), a <code>POST /submissions</code> request will result in a duplicate entry error.  <code>POST /measurement-sets</code> should be used.`,\n  },\n  {\n    endPoint: '/submissions/:id',\n    method: 'GET',\n    description: `Returns submissions for a specific submission ID.`,\n  },\n  {\n    endPoint: '/measurement-sets',\n    method: 'GET',\n    description: 'Returns all measurement sets that you have submitted.',\n  },\n  {\n    endPoint: '/measurement-sets/:id',\n    method: 'GET',\n    description: `Returns measurement set if id belongs to you, otherwise '404 Not Found'.`,\n  },\n  {\n    endPoint: '/measurement-sets',\n    method: 'POST',\n    description: 'This endpoint allows to create a measurement set. The API will find/create the matching submission.',\n  },\n  {\n    endPoint: '/measurement-sets/:id',\n    method: 'PUT',\n    description: `This endpoint allows you to update measurement sets you have submitted (full replacement). Returns '404 Not Found' if id doesn't belong to you. If id is invalid or if id was not found.`,\n  },\n  {\n    endPoint: '/measurement-sets/:id',\n    method: 'PATCH',\n    description: `This endpoint allows you to update measurement sets you have submitted (only replaces fields submitted). Returns '404 Not Found' if id doesn't belong to you or if id was not found.`,\n  },\n  {\n    endPoint: '/measurement-sets/:id',\n    method: 'DELETE',\n    description: `This endpoint allows you to delete measurement sets you have submitted. Returns '404 Not Found' if id doesn't belong to you or if id was not found.`,\n  },\n  {\n    endPoint: '/measurements',\n    method: '',\n    description: `Same as <code>/measurement-sets</code>`,\n  },\n];\n\nconst QualifiedRegistriesAndQcdrs = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 07/01/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Qualified Registries and QCDRs</h2>\n      <p className='ds-text'>\n        Qualified Registries and QCDRs entities that are authorized by the Centers for Medicare &amp; Medicaid Services (CMS) to submit Quality Measures, Promoting Interoperability Measures, and/or Improvement Activities on behalf of MIPS eligible clinicians, groups, and/or virtual groups for a specified performance year can submit directly to the Submissions API using an API token.\n      </p>\n      <p className='ds-text'>\n        Tokens are specific to your organization and are specific to the environment within the Submissions API. Developer Preview tokens are for testing against the Submissions API in the Developer Preview environment. Production token are for submitting during the specific performance year's submissions window to the production environment of the Submissions API.\n      </p>\n      <p className='ds-text'>\n        If you are a Registry or QCDR using the Developer Preview, you have an API key that is associated with an 'organization'. This affects what endpoints you are authorized to use, and what behavior each endpoint has.\n      </p>\n      <p className='ds-text'>\n        At a high level, your API key allows you to create and edit data using the <code>/measurement-sets</code> and <code>/measurements</code> endpoints. You cannot create data using the <code>/submissions</code> endpoint. For more information about what you're authorized to do with the Submissions API, click <LinkToId to='developer-preview#authorization' text='here' offset='130' />.\n      </p>\n\n      <h2 className='ds-h2' id='authentication'>Authentication</h2>\n      <p className='ds-text'>\n        You must authenticate your account when using the Submissions API. Authenticate via bearer auth by adding your API token to the header of every request using the key value: <strong>Authorization: Bearer [YOUR API TOKEN]</strong>.\n      </p>\n      <p className='ds-text'>\n        API keys carry many privileges, and must not be shared in publicly accessible areas such as GitHub and in client-side code.  Even within organizations, access must be limited to staff embedding it in software.\n      </p>\n      <p className='ds-text'>\n        Your API key carries many privileges, so be sure to keep it secret! Do not share your secret API key in publicly accessible areas such GitHub, client-side code, and so forth.\n      </p>\n      <p className='ds-text'>\n        All API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests in the Developer Preview without authentication will also fail.\n      </p>\n      <p className='ds-text'>\n        Please see <ExternalLink href={`${envConfig.cmsGithubIo}/qpp-developer-preview-docs/getting-started`} text='Getting Started'/> for instructions on how to download your registry token.\n      </p>\n\n      <h2 className='ds-h2' id='authorization'>Authorization</h2>\n      <p className='ds-text'>\n        If you are a current Qualified Registry or QCDR using the Submissions API, you have an API key that is associated with an 'organization'. This affects what endpoints you are authorized to use, and what behavior each endpoint has.\n      </p>\n      <p className='ds-text'>\n        In general, if you have an organization-type API key, you can:\n      </p>\n      <ul>\n        <li>Submit data for any TIN without any prior certification</li>\n        <li>Edit data that you have submitted</li>\n        <li>View scores based on data you've submitted</li>\n      </ul>\n\n      <p className='ds-text'>\n        Below is a comprehensive list of how each endpoint behaves if you are using an organization-type API key:\n      </p>\n      <table className='ds-c-table ds-c-table--borderless ds-u-font-size--small'>\n        <thead>\n          <tr>\n            {['Endpoint', 'HTTP Method', 'Description'].map((h, i) => <th key={i}>{h}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map(({ endPoint, method, description }, i) =>\n            <tr key={i}>\n              <td><code>{endPoint}</code></td>\n              <td>{method}</td>\n              {envConfig.htmlRegex.test(description)\n                ? <td dangerouslySetInnerHTML={{ __html: description }} />\n                : <td>{description}</td>\n              }\n            </tr>,\n          )}\n        </tbody>\n      </table>\n\n      <h2 className='ds-h2'>Retrieve your API tokens</h2>\n      <p className='ds-text'>\n        To retrieve your Developer Preview and production tokens, you must have a HARP account that has a Security Official role for your Qualified Registry or QCDR. Please see <ExternalLink href={`${envConfig.cmsGithubIo}/qpp-developer-preview-docs/getting-started`} text='Getting Started'/> for instructions on how to download your registry token..\n      </p>\n    </>\n  );\n};\n\nexport default QualifiedRegistriesAndQcdrs;\n\n","import React from 'react';\n\nimport { LinkToId } from '../../../shared';\n\nconst AuthenticationAndAuthorization = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 08/26/2020</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Submissions API Authentication and Authorization</h2>\n      <p className='ds-text'>\n        To submit directly to QPP using the Submissions API, Qualified Registries and QCDRs use CMS-provided tokens in their API calls. You can learn more about the Submissions API authentication and authorization model for Qualified Registries and QCDRs <LinkToId to='qualified-registries-and-qcdrs' text='here' />.\n      </p>\n\n      <p className='ds-text'>\n        We support OAuth Authentication, which provides client applications with secure, delegated access to the Submissions API. You can learn more about using OAuth with the Submissions API <LinkToId to='getting-started-with-oauth' text='here' />.\n      </p>\n    </>\n  );\n};\n\nexport default AuthenticationAndAuthorization;\n\n","import React from 'react';\n\nimport { ExternalLink } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst SubmittingToQppSubmissionApi = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 01/05/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>The Submissions API enables submissions and real-time performance scoring of Quality Payment Program (QPP) data. </h2>\n      <p className='ds-text'>\n        The Submissions API is a RESTful API. It has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. It uses standard HTTP features, like HTTPS authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients.\n      </p>\n      <p className='ds-text'>\n        The Submissions API supports cross-origin resource sharing, allowing you to interact securely with the API from a client-side web application (though you should never expose your secret API key in any public website's client-side code).\n      </p>\n      <p className='ds-text'>API responses are returned in JSON, including errors.</p>\n\n      <h2 className='ds-h2'>Object Types</h2>\n      <ul>\n        <li>\n          Submissions: A submission object contains any performance data submitted on behalf of a single MIPS-eligible clinician, practice or group.\n        </li>\n        <li>\n          Measurement sets: A measurement set object represents a set of performance data related to one specific category (Promoting Interoperability, Improvement Activities, Quality), and is tied to a submission object.\n        </li>\n        <li>\n          Measurements: A measurement object represents one single data point related to a specific measure in a given category, and is tied to a measurement set object.\n        </li>\n      </ul>\n\n      <p className='ds-text'>\n        Visit the <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs`} text='Interactive Documentation' /> to learn more about the endpoints available in the Submissions API.\n      </p>\n    </>\n  );\n};\n\nexport default SubmittingToQppSubmissionApi;\n","import { IDataModelTable, ICodeTab } from '../../../shared';\n\nimport submissionJsonExampleIa from './json/submission-example-ia.json';\nimport submissionJsonExampleAci from './json/submission-example-aci.json';\nimport submissionJsonExampleQuality from './json/submission-example-quality.json';\nimport scoringJsonExampleIa from './json/scoring-example-output-ia.json';\nimport scoringJsonExampleAci from './json/scoring-example-output-aci.json';\nimport scoringJsonExampleQuality from './json/scoring-example-output-quality.json';\n\nexport interface IFields {\n  [k: string]: IDataModelTable[];\n}\n\nexport interface ITabs {\n  [k: string]: ICodeTab[];\n}\n\ninterface IScoringData {\n  [k: string]: ICodeTab[];\n}\n\nexport const measurementSetPracticeDetails = {\n  'Practice Details': 'practice-details',\n};\n\nexport const measurementsTitleAndId = {\n  'Boolean': 'boolean-measurements',\n  'Proportion': 'proportion-measurements',\n  'Non-Proportion': 'non-proportion-measurements',\n  'Single-Performance Rate': 'single-performance-rate-measurements',\n  'Multi-Performance Rate': 'multi-performance-rate-measurements',\n  'Multi-Performance Rate Stratum': 'stratum',\n};\n\nexport const measurementsFields: IFields = {\n  fields: [\n    { name: 'id', value: 'string', description: 'The id of the measurement.', notes: ' '},\n    { name: 'measurementSetId', value: 'string', description: 'The id of the measurement set in which the measurement belongs.', notes: ' ' },\n    { name: 'measureId', value: 'string', description: 'The id of the measure to which the measurement is attesting. All measures and their IDs are available in <a href=\"https://github.com/CMSgov/qpp-measures-data\" rel=\"noopener noreferrer\" target=\"_blank\">qpp-measures-data</a>. For quality measures, the measureId is the same as the quality number. For a promoting interoperability (PI) measure, the measureId is the measure identifier for the PI measure, and for an improvement activity (IA) measure, the measureId is the measure identifier for the IA measure.', notes: 'writable, required' },\n    { name: 'value', value: 'object', description: 'Different measurements will have different values. Acceptable measurement types are <b>boolean</b>, <b>proportion</b>, <b>non-proportion</b>, and <b>performance rate</b>.', notes: 'writable, required' },\n  ],\n  boolean: [\n    { name: 'value', value: 'boolean', description: 'True if attesting to the associated measure.', notes: 'writable, required' },\n  ],\n  proportion: [\n    { name: 'numerator', value: 'integer', description: 'The number of patients or episodes of care for which the measure criteria are satisfied. Must be greater than or equal to zero and less than or equal to the <b>denominator</b>.', notes: 'writable, required' },\n    { name: 'denominator', value: 'integer', description: 'The total number of patients or episodes of care as described by the measure. Must be greater than or equal to zero. Can only be 0 if the numerator is 0 as well.', notes: 'writable, required' },\n  ],\n  nonProportion: [\n    { name: 'numerator', value: 'float', description: 'The numerator as described in the QCDR measure specification.', notes: 'writable, required' },\n    { name: 'denominator', value: 'float', description: 'The denominator as described in the QCDR measure specification.', notes: 'writable, required' },\n    { name: 'isEndToEndReported', value: 'boolean', description: 'True if the measure was reported via certified EHR technology without any manual interference.', notes: 'writable, required' },\n    { name: 'numeratorExclusion', value: 'float', description: 'The exclusions from the numerator field as described in the QCDR measure specification.', notes: 'writable, optional' },\n    { name: 'denominatorException', value: 'float', description: 'The exceptions from the denominator field as described in the QCDR measure specification.', notes: 'writable, optional' },\n    { name: 'reportingRate', value: 'float', description: 'The reporting rate, ranging from zero to one-hundred and representing a percentage, is equal to ((observationInstances + denominatorException + numeratorExclusion) / denominator) * 100. This is also referred to as data completeness.', notes: 'calculated by API and returned in response' },\n    { name: 'observationInstances', value: 'integer', description: 'The number of denominator eligible instances that are used as input in the calculation to derive the numerator (i.e. average, ratio).', notes: 'writable, required' },\n  ],\n  singlePerformanceRate: [\n    { name: 'isEndToEndReported', value: 'boolean', description: 'True if the measure was reported via certified EHR technology without any manual interference.', notes: 'writable, required' },\n    { name: 'performanceMet', value: 'integer', description: 'The number of patients for which the measure criteria are satisfied. Must be greater than or equal to zero and less than or equal to the <b>eligiblePopulation</b>', notes: 'writable, required' },\n    { name: 'performanceNotMet', value: 'integer', description: 'The number of patients for which the measure criteria are not satisfied.', notes: 'writable, optional' },\n    { name: 'eligiblePopulationExclusion', value: 'integer', description: 'The number of patients who are excluded from the measure. eligiblePopulationExclusion should be 0 for all CQM measures as excluded populations should already have been subtracted out of the eligible population in the denominator. eligiblePopulationExclusion can have a value for eCQM measures where no human intervention is allowed. In the measures specifications for claims measures and eCQMs, this field is also referred to as \"Denominator Exclusion\". In measures specifications for registry and QCDR measures, this field is referred to as \"Numerator Exclusion\".', notes: 'writable, optional' },\n    { name: 'eligiblePopulationException', value: 'integer', description: 'The number of patients for which the measure criteria are not satisfied but who are excluded from the measure. In the measures specifications, this field is also referred to as \"Denominator Exception\".', notes: 'writable, optional' },\n    { name: 'eligiblePopulation', value: 'integer', description: 'The total number of eligible patients as described by the measure. Must be greater than or equal to zero. In the measures specifications, this field is also referred to as \"Eligible Population Denominator\".', notes: 'writable, required' },\n    { name: 'reportingRate', value: 'float', description: 'The reporting rate, ranging from zero to one-hundred and representing a percentage, is equal to ((performanceMet + eligiblePopulationExclusion + eligiblePopulationException + performanceNotMet) / eligiblePopulation) * 100. This is also referred to as data completeness.', notes: 'calculated by API and returned in response' },\n    { name: 'performanceRate', value: 'float', description: 'The performance rate for a single performance rate measurement, ranging from zero to one-hundred and representing a percentage, is equal to (performanceMet / (performanceMet + performanceNotMet)) * 100.', notes: `If <code>metricType = registrySinglePerformanceRate</code> then writable and <i>required</i>.<br> If <code>metricType = singlePerformanceRate</code>, then calculated by API and returned in response.` },\n  ],\n  multiPerformanceRate: [\n    { name: 'isEndToEndReported', value: 'boolean', description: 'True if the measure was reported  via certified EHR technology without any manual interference.', notes: 'writable, required' },\n    { name: 'reportingRate', value: 'float', description: 'The reporting rate, ranging from zero to one-hundred and representing a percentage, is equal to ((performanceMet + eligiblePopulationExclusion + eligiblePopulationException + performanceNotMet) / eligiblePopulation) * 100. This is also referred to as data completeness.', notes: 'calculated by API and returned in response' },\n    {\n      name: 'performanceRate',\n      value: 'float',\n      description: 'Performance rates are stored and represented as percentages with values from 0.00 to 100.00. ' +\n        'The performance rate for a multiple performance rate measurement is calculated using the overallAlgorithm of the corresponding measure. ' +\n        'Note, performance rate calculations exclude any \"overall\" strata, except where the overallAlgorithm is overallStratumOnly. ' +\n        'Also note, for the <b>simpleAverage</b> and <b>overallStratumOnly</b> algorithms, each stratum\\'s performance rate is calculated as <samp>performanceMet / (performanceMet + performanceNotMet - exclusions)</samp>. ' +\n        'Currently, a measure\\'s overallAlgorithm may be one of the following:<ul>' +\n        '<li><b>simpleAverage:</b> <samp>(sum strata\\'s performance rates) / (number of strata) * 100</samp>,</li>' +\n        '<li><b>weightedAverage:</b> <samp>((sum strata\\'s performanceMet) / (sum strata\\'s performanceMet and performanceNotMet)) * 100</samp>, or,</li>' +\n        '<li><b>sumNumerators:</b> <samp>sum strata\\'s performanceMet</samp>, or,</li>' +\n        '<li><b>overallStratumOnly:</b> performance rate of the \"overall\" stratum.</li></ul>',\n      notes: `If <code>metricType = registryMultiPerformanceRate</code> then writable and <i>required</i>.<br> If <code>metricType = multiPerformanceRate</code>, then calculated by API and returned in response.`,\n    },\n    { name: 'strata', value: 'Array(performanceRateStratum)', description: 'The strata name associated with the performance rate measurement. Needs to match with the measure strata names in <a href=\"https://github.com/CMSgov/qpp-measures-data\" rel=\"noopener noreferrer\" target=\"_blank\">qpp-measures-data</a>.', notes: 'writable, required' },\n  ],\n  stratum: [\n    { name: 'measurementId', value: 'string', description: 'The id of the measurement in which the stratum belongs.', notes: ' ' },\n    { name: 'performanceMet', value: 'integer', description: 'The number of patients for which the measure criteria are satisfied. Must be greater than or equal to zero and less than or equal to the <b>eligiblePopulation</b>', notes: 'writable, required' },\n    { name: 'performanceNotMet', value: 'integer', description: 'The number of patients for which the measure criteria are not satisfied.', notes: 'writable, optional' },\n    { name: 'eligiblePopulationExclusion', value: 'integer', description: 'The number of patients who are excluded from the measure. In the measures specifications, this field is also referred to as \"Numerator Exclusion\".', notes: 'writable, optional' },\n    { name: 'eligiblePopulationException', value: 'integer', description: 'The number of patients for which the measure criteria are not satisfied but who are excluded from the measure. In the measures specifications, this field is also referred to as \"Denominator Exception\".', notes: 'writable, optional' },\n    { name: 'eligiblePopulation', value: 'integer', description: 'The total number of eligible patients as described by the measure. Must be greater than or equal to zero. In the measures specifications, this field is also referred to as \"Eligible Population Numerator/Denominator\".', notes: 'writable, required' },\n    { name: 'stratum', value: 'string', description: 'The strata associated with the performance rate measurement.', notes: 'writable, required' },\n  ],\n};\n\nexport const measurementsTabs: ITabs = {\n  fields: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": ${Object.entries(measurementsTitleAndId).map(([title, id]) => `<a href='#${id}'>${title}</a>` ).join(' | ')}\n}`,\n    },\n  ],\n  boolean: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": boolean\n}`,\n    },\n  ],\n  proportion: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": {\n    \"numerator\": integer,\n    \"denominator\": integer\n  }\n}`,\n    },\n  ],\n  nonProportion: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": {\n    \"numerator\": float,\n    \"denominator\": float,\n    \"isEndToEndReported\": boolean,\n    \"denominatorException\": float,\n    \"numeratorExclusion\": float,\n    \"reportingRate\": float,\n    \"observationInstances\": integer\n  }\n}`,\n    },\n  ],\n  singlePerformanceRate: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": {\n    \"isEndToEndReported\": boolean,\n    \"performanceMet\": integer,\n    \"performanceNotMet\": integer,\n    \"eligiblePopulationExclusion\": integer,\n    \"eligiblePopulationException\": integer,\n    \"eligiblePopulation\": integer,\n    \"performanceRate\": float,\n    \"reportingRate\": float\n  }\n}`,\n    },\n  ],\n  multiPerformanceRate: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": {\n    \"isEndToEndReported\": boolean,\n    \"performanceRate\": float,\n    \"reportingRate\": float,\n    \"strata\": array(<a href='#${measurementsTitleAndId['Multi-Performance Rate Stratum']}'>Performance Rate Stratum</a>)\n  }\n}`,\n    },\n  ],\n  stratum: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"measurementId\": string,\n  \"performanceMet\": integer,\n  \"performanceNotMet\": integer,\n  \"eligiblePopulationExclusion\": integer,\n  \"eligiblePopulationException\": integer,\n  \"eligiblePopulation\": integer,\n  \"stratum\": string\n}`,\n    },\n  ],\n  allCauseReadmission: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": {\n    \"score\": float,\n    \"details\": {\n      \"numberOfIndexAdmissions\": integer,\n      \"numberOfReadmissions\": integer,\n      \"plannedReadmissions\": integer,\n      \"indexReadmissionDiagnosisPairCounts\": [\n          {\n          \"indexAdmissionCode\": string,\n          \"readmissionCode\": string,\n          \"count\": integer\n          }\n      ],\n      \"indexAdmissionCountByDiagnosis\": [\n          {\n          \"code\": string,\n          \"count\": integer\n          }\n        ],\n      \"readmissionCountByDiagnosis\": [\n          {\n          \"code\": string,\n          \"count\": integer\n          }\n      ]\n    }\n  }\n}`,\n    },\n  ],\n  cahps: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"measurementSetId\": string,\n  \"measureId\": string,\n  \"value\": {\n    \"score\": float,\n    \"reliability\": string,\n    \"mask\": boolean,\n    \"isBelowMinimum\": boolean\n  }\n}`,\n    },\n  ],\n};\n\nexport const measurementSetsFields: IFields = {\n  fields: [\n    { name: 'id', value: 'string', description: 'The id of the measurement set.', notes: ' ' },\n    { name: 'createdAt', value: 'datetime', description: 'The creation time of the measurement set in <a href=\"https://www.ietf.org/rfc/rfc3339.txt\" rel=\"noopener noreferrer\" target=\"_blank\">RFC 3339</a> format.', notes: ' ' },\n    { name: 'updatedAt', value: 'datetime', description: 'The modification time of the measurement set in <a href=\"https://www.ietf.org/rfc/rfc3339.txt\" rel=\"noopener noreferrer\" target=\"_blank\">RFC 3339</a> format.', notes: ' ' },\n    { name: 'submissionId', value: 'string', description: 'The id of the submission in which the measurement set belongs.', notes: ' ' },\n    { name: 'category', value: 'string', description: 'The category of the measurement set. Acceptable values are <b>\"ia\"</b>, <b>\"pi\"</b> and <b>\"quality\"</b>.  Note you cannot submit \"pi\" measurement sets for \"apm\" entity types.', notes: 'writable, required' },\n    { name: 'chertId', value: 'string', description: 'The CMS EHR Certification Identification Number is generated by the CHPL. This is only applicable to Promoting Interoperability measurement sets.', notes: 'writable, required' },\n    { name: 'submissionMethod', value: 'string', description: 'The method by which the measurement set data was submitted. Acceptable values are <b>\"registry\"</b> and <b>\"electronicHealthRecord\"</b>.', notes: 'writable, required' },\n    { name: 'programName', value: 'string', description: 'The quality payment program under which the measurementSet should be scored.  Acceptable values are <b>\"mips\"</b>, <b>\"app1</b>, <b>\"cpcPlus\"</b>, and <b>\"pcf\"</b>. If not provided, the programName will be recorded as \"mips\".', notes: 'writable, optional' },\n    { name: 'practiceId', value: 'string', description: 'The ID of the practice associated with the measurement set. Required if programName is set to <b>\"cpcPlus\"</b>. Must be omitted if programName is not set to <b>\"cpcPlus\"</b>.', notes: 'writable, optional' },\n    { name: 'practiceDetails', value: 'object', description: `This object contains the taxpayerIdentificationNumber and/or nationalProviderIdentifiers of the practice associated with the measurement set. Optional if programName is set to <b>\"pcf\"</b>. Must be omitted if programName is not set to <b>\"pcf\"</b>. More details <a href='measurement-sets#practice-details'>below</a>.`, notes: 'writeable, optional'},\n    { name: 'performanceStart', value: 'string', description: 'A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). The first date when the measurement data is applicable.', notes: 'writable, required' },\n    { name: 'performanceEnd', value: 'string', description: 'A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). The last date when the measurement data is applicable.', notes: 'writable, required' },\n    { name: 'measurements', value: 'Array(measurements)', description: 'Measurements associated with the measurement set.', notes: 'writable, optional' },\n  ],\n  practiceDetails: [\n    { name: 'taxpayerIdentificationNumber', value: 'string', description: 'The 9-digit identifier of the practice associated with the measurementSet. ', notes: 'writeable, optional'},\n    { name: 'nationalProviderIdentifiers', value: 'string[]', description: 'An array of strings containing the 10-digit identifiers of the practice associated with the measurementSet, separated by commas.', notes: 'writeable, optional'},\n  ],\n};\n\nexport const measurementSetsTabs: ITabs = {\n  fields: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"id\": string,\n  \"createdAt\": datetime,\n  \"updatedAt\": datetime,\n  \"submissionId\": string,\n  \"category\": string,\n  \"cehrtId\": string,\n  \"submissionMethod\": string,\n  \"programName\": string,\n  \"practiceId\": string,\n  \"practiceDetails\": object(<a href='measurement-sets#practice-details'>Practice Details</a>),\n  \"performanceStart\": date,\n  \"performanceEnd\": date,\n  \"measurements\": array(<a href='measurements'>Measurements Resource</a>)\n}`,\n    },\n  ],\n  practiceDetails: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"taxpayerIdentificationNumber\": string,\n  \"nationalProviderIdentifiers\": string[]\n}`,\n    },\n  ],\n};\n\nexport const submissionsFields: IFields = {\n  fields: [\n    { name: 'id', value: 'string', description: 'The id of the submission.', notes: ' ' },\n    { name: 'createdAt', value: 'datetime', description: 'The creation time of the submission in <a href=\"https://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a> format.', notes: ' ' },\n    { name: 'updatedAt', value: 'datetime', description: 'The modification time of the submission in <a href=\"https://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a> format.', notes: ' ' },\n    { name: 'entityType', value: 'string', description: 'Acceptable values are <b>\"apm\"</b>, <b>\"group\"</b>, <b>\"individual\"</b>, <b>\"virtualGroup\"</b>', notes: 'writable, required' },\n    { name: 'entityId', value: 'string', description: 'The unique identifier for the virtual group or APM associated with the submission.  If a CPC+ or PCF APM, the entityId is the PracticeID', notes: 'writable, required if entityType is \"apm\" or \"virtualGroup\" ' },\n    { name: 'taxpayerIdentificationNumber', value: 'string', description: 'The 9-digit identifier of the provider associated with the submission.', notes: 'writable if entityType is \"individual\" or \"group\"' },\n    { name: 'nationalProviderIdentifier', value: 'string', description: 'The 10-digit identifier of the provider associated with the submission.', notes: 'writable only if entityType is \"individual\"' },\n    { name: 'performanceYear', value: 'integer', description: 'The year in which performance data for the submission was collected.', notes: 'writable, required' },\n    { name: 'measurementSets', value: 'Array(measurementSet)', description: 'Measurement sets associated with the submission.', notes: 'writable, optional' },\n  ],\n};\n\nexport const submissionsTabs: ITabs = {\n  fields: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n      \"id\": string,\n      \"createdAt\": datetime,\n      \"updatedAt\": datetime,\n      \"entityType\": string,\n      \"entityId\": string,\n      \"taxpayerIdentificationNumber\": string,\n      \"nationalProviderIdentifier\": string,\n      \"performanceYear\": integer,\n      \"measurementSets\": array(<a href='measurement-sets'>MeasurementSets Resource</a>)\n}`,\n    },\n  ],\n};\n\nexport const benchmarksFields: IFields = {\n  fields: [\n    { name: 'measureId', value: 'string', description: 'The id of the measurement.\t', notes: ' ' },\n    { name: 'benchmarkYear', value: 'integer', description: 'The performance year\\'s data from which the benchmark deciles are calculated.\t', notes: ' ' },\n    { name: 'performanceYear', value: 'integer', description: 'The year in which the benchmark applies.\t', notes: ' ' },\n    { name: 'submissionMethod', value: 'string', description: 'The submissionMethod for which the benchmark is applicable.\t', notes: ' ' },\n    { name: 'isToppedOut', value: 'boolean', description: 'Indicates if the benchmark is topped out for the current Performance Year\t', notes: ' ' },\n    { name: 'isHighPriority', value: 'boolean', description: 'Indicates the measure is a high priority measure within the program. \t', notes: ' ' },\n    { name: 'isToppedOutByProgram', value: 'boolean', description: 'Indicates if the benchmark is topped out for 2 consecutive years. This results in a 7 point cap applied to the measure for scoring.\t', notes: ' ' },\n    { name: 'deciles', value: 'numeric array', description: 'List of values starting with the lower bound limit of the range then 3 to 10.\t', notes: ' ' },\n  ],\n};\n\nexport const benchmarksTabs: ITabs = {\n  fields: [\n    {\n      tab: 'Sample JSON',\n      code: `{\n  \"measureId\": \"001\",\n  \"benchmarkYear\": 2019,\n  \"performanceYear\": 2021,\n  \"submissionMethod\": \"registry\",\n  \"isToppedOut\": false,\n  \"isHighPriority\": true,\n  \"isToppedOutByProgram\": false,\n  \"deciles\": [...]\n}`,\n    },\n  ],\n};\n\nexport const scoringData: IScoringData = {\n  submissionJsonExampleStringIa: [{\n    tab: 'Sample JSON',\n    code: JSON.stringify(submissionJsonExampleIa, null, 2),\n  }],\n  submissionJsonExampleStringAci: [{\n    tab: 'Sample JSON',\n    code: JSON.stringify(submissionJsonExampleAci, null, 2),\n  }],\n  submissionJsonExampleStringQuality: [{\n    tab: 'Sample JSON',\n    code: JSON.stringify(submissionJsonExampleQuality, null, 2),\n  }],\n  scoringJsonExampleStringIa: [{\n    tab: 'Sample JSON',\n    code: JSON.stringify(scoringJsonExampleIa, null, 2),\n  }],\n  scoringJsonExampleStringAci: [{\n    tab: 'Sample JSON',\n    code: JSON.stringify(scoringJsonExampleAci, null, 2),\n  }],\n  scoringJsonExampleStringQuality: [{\n    tab: 'Sample JSON',\n    code: JSON.stringify(scoringJsonExampleQuality, null, 2),\n  }],\n};\n\n\n","import React from 'react';\n\nimport { ExternalLink, CodeTab, LinkToId } from '../../../shared';\nimport { scoringData } from './data';\nimport envConfig from '../../../envConfig';\n\ninterface ITextAndId {\n  [k: string]: {\n    id: string;\n    sub: {\n      [k: string]: string;\n    }\n  };\n}\n\nconst textAndId: ITextAndId = {\n  'Improvement Activities': {\n    id: 'ia',\n    sub: {\n      'Improvement Activity Submissions': 'ia-sub',\n      'Improvement Activity Scoring Response': 'ia-response',\n    },\n  },\n  'Promoting Interoperability': {\n    id: 'pi',\n    sub: {\n      'Promoting Interoperability Submissions': 'pi-sub',\n      'Promoting Interoperability Scoring Response': 'pi-response',\n    },\n  },\n  'Quality': {\n    id: 'quality',\n    sub: {\n      'Quality Submissions': 'quality-sub',\n      'Quality Scoring Response': 'quality-response',\n    },\n  },\n};\n\nconst Scoring = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 06/23/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Scoring</h2>\n      <p className='ds-text--lead'>\n        The scoring engine is responsible for interpreting submissions and outputting a score. Each category score is utilized to create the QPP score object.\n      </p>\n      <p className='ds-text--lead'>\n        Note: Registries and QCDRs submitting on behalf of others will only have access to view the score for the data they submitted.  If they need to see the complete score, they will need permission from the practice.\n      </p>\n      <h3 className='ds-h3'>Developer Preview Testing Environment</h3>\n      <p className='ds-text--lead'>\n        In the Developer Preview Testing Environment you can use the <code>POST .../score-preview</code> endpoint to view the scoring object returned for the data you are proposing to submit.\n        The data is not saved. Try the <code>POST .../submissions/score-preview</code> endpoint <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs/#/Submissions/scoreSubmission`} text='here' />.\n      </p>\n      <p className='ds-text--lead'>\n        Note: You can use the <ExternalLink href={`${envConfig.cmsGithubIo}/qpp-developer-preview-docs/tutorial-special-scoring-scenarios`}text='special scoring scenarios test data'/> to see the score responses for different types of eligibility profiles.\n      </p>\n      <h3 className='ds-h3'>During Submissions Window</h3>\n      <p>\n        Once submitting quality data during the Submission window you can use the <code>GET .../submissions/&#123;id&#125;/score</code> to view the score for the data after it is submitted.\n        This submission data is saved under the submissionId and retrieved to view the score.\n        Try the <code>GET .../submissions/&#123;id&#125;/score</code> endpoint <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs#/Submissions/getSubmissionScore`} text='here' />.\n      </p>\n      <br/>\n      <h2 className='ds-h2' id={textAndId['Improvement Activities'].id}>Improvement Activities (IA) Scoring</h2>\n      <p className='ds-text--lead'>\n        The only available option for reporting Improvement Activities is boolean, and only Activities completed need to be reported.\n      </p>\n      <ul>\n        <li>\n          <LinkToId to='measurements#boolean-measurements' text='Boolean Measures' offset='120' />\n        </li>\n      </ul>\n\n\n      <h3 className='ds-h3' id={textAndId['Improvement Activities'].sub['Improvement Activity Submissions']}>Example IA Submission</h3>\n      <p className='ds-text--lead'>\n        The example submission below contains 4 activities. The reported activities contain both High and Medium weighted activities.\n      </p>\n      <CodeTab data={scoringData.submissionJsonExampleStringIa} />\n\n\n      <h3 className='ds-h3'>Example Scoring</h3>\n      <p>\n        Use the <code>.../submisisons/score-preview</code> endpoint (above) to see the scoring response.\n      </p>\n\n\n      <br/>\n      <h2 className='ds-h2'>Promoting Interoperability (PI) Scoring</h2>\n      <p className='ds-text--lead'>\n        The Promoting Interoperability Category requires all measures associated with the category to either be reported or their corresponding exclusion to be claimed. Additionally, to receive credit for the category, all the criteria below must be fulfilled:\n      </p>\n      <ul>\n        <li>Utilization of 2015 CEHRT and the reporting of the corresponding CMS CEHRT ID in the submission</li>\n        <li>Minimum 90 day performance period</li>\n        <li>Completion of Required Attestation Statements</li>\n        <li>Completion of All Required Measures</li>\n        <li>Bonus Measures</li>\n      </ul>\n\n      <h3 className='ds-h3' id={textAndId['Promoting Interoperability'].sub['Promoting Interoperability Submissions']}>Example PI Submission</h3>\n      <p className='ds-text--lead'>\n        The measure types available for submission are outlined below. Each measure in the repo will dictate which type is to be utilized.\n      </p>\n      <ul>\n        <li>\n          <LinkToId to='measurements#proportion-measurements' text='Proportion Measures' offset='120' />\n        </li>\n        <li>\n          <LinkToId to='measurements#boolean-measurements' text='Boolean' offset='120' />\n        </li>\n      </ul>\n      <CodeTab data={scoringData.submissionJsonExampleStringAci} />\n\n\n      <h3 className='ds-h3'>Example Scoring</h3>\n      <p>\n        Use the <code>.../submisisons/score-preview</code> endpoint (above) to see the scoring response.\n      </p>\n\n\n      <br/>\n      <h2 className='ds-h2' id={textAndId.Quality.id}>Quality</h2>\n      <p className='ds-text--lead'>\n        The Quality category requires 6 measures to receive full credit, one of which must be either an Outcome measure or High Priority. If no Outcome or High Priority measure is submitted, you will only be scored on the top 5 measures and receive a score of 0 for the sixth measure.\n      </p>\n\n      <h3 className='ds-h3' id={textAndId.Quality.sub['Quality Submissions']}>Example Quality Submission</h3>\n      <p className='ds-text--lead'>\n        Submission structure in the Quality category are contingent on the measure being submitted. If there are questions around the data to be submitted in the fields, please refer to the measure specification. The available types related to the measures are outlined below:\n      </p>\n      <ul>\n        <li>\n          <LinkToId to='measurements#non-proportion-measurements' text='Non-Proportion Measures' offset='120' />\n        </li>\n        <li>\n          <LinkToId to='measurements#single-performance-rate-measurements' text='Single Performance Rates' offset='120' />\n        </li>\n        <li>\n          <LinkToId to='measurements#multi-performance-rate-measurements' text='Multi-Performance Rates' offset='120' />\n        </li>\n      </ul>\n      <p className='ds-text--lead'>\n        In the sample below, measure 226 is a multi-strata, 110 is a single performance measure, ACRAD15 is a non-proportion measure.\n      </p>\n      <CodeTab data={scoringData.submissionJsonExampleStringQuality} />\n\n\n      <h3 className='ds-h3'>Example Scoring</h3>\n      <p>\n        Use the <code>.../submisisons/score-preview</code> endpoint (above) to see the scoring response.\n      </p>\n\n    </>\n  );\n};\n\nexport default Scoring;\n","import React from 'react';\n\nimport envConfig from '../../../envConfig';\nimport { ExternalLink } from '../../../shared';\n\nconst tableData = {\n  'If I am an EHR, how can I submit MIPS Quality data for my clients?': `\n    <ul>\n      <li>\n        Submissions UI: EHRs can submit via the Submissions UI by logging into the QPP site <a href='https://qpp.cms.gov' target='_blank' rel='noopener noreferrer'>qpp.cms.gov</a>. They will have to be connected as a Staff user for each of the Individuals and Groups they need to submit quality data for. Submissions for each individual or group could be uploaded as an excel file for efficiency.\n      </li>\n      <li>\n        Burden Reduction: EHRs may apply for Burden Reduction which allows them to obtain a registry token to use to submit via the Submissions API.\n      </li>\n    </ul>\n  `,\n  'What is the performance threshold for the Submissions API?': '25 rps avg threshold, 40 rps burst threshold.',\n};\n\nconst FrequentlyAskedQuestions = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 08/26/2020</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Frequently Asked Questions</h2>\n\n      <h3 className='ds-h3'>General and Developer Preview</h3>\n      <p>\n        See <ExternalLink href={`${envConfig.cmsGithubIo}/qpp-developer-preview-docs/frequently-asked-questions`} text='Developer Preview Frequently Asked Questions' />\n      </p>\n\n      <h3 className='ds-h3'>Submissions API</h3>\n      <table className='ds-c-table ds-u-font-size--small faq-table'>\n        <thead>\n          <tr>\n            {['Question', 'Answer'].map((h, i) => <th key={i}>{h}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(tableData).map(([question, answer], i) =>\n            <tr key={i}>\n              <td className='qpp-table-text-align'>{question}</td>\n              {envConfig.htmlRegex.test(answer)\n                ? <td className='qpp-table-text-align' dangerouslySetInnerHTML={{ __html: answer }} />\n                : <td className='qpp-table-text-align' >{answer}</td>\n              }\n            </tr>,\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default FrequentlyAskedQuestions;\n","import { FunctionComponent } from 'react';\n\n// Topics\nimport Introduction from './components/topics/introduction';\nimport Announcements from './components/topics/announcements';\nimport ChangeLog from './components/topics/change-log';\nimport DeveloperPreview from './components/topics/developer-preview';\n\n// Guides\nimport AdvancedTutorial from './components/guides/advanced-tutorial';\nimport BasicTutorial from './components/guides/basic-tutorial';\nimport GettingStartedUsingQppOauth from './components/guides/getting-started-with-oauth';\nimport QualifiedRegistriesAndQcdrs from './components/guides/qualified-registries-and-qcdrs';\nimport AuthorizationAndAuthentication from './components/guides/authorization-and-authentication';\nimport SubmittingToQppSubmissionApi from './components/guides/submitting-to-submissions-api';\n\n// References\nimport Benchmarks from './components/references/benchmarks';\nimport MeasurementSets from './components/references/measurement-sets';\nimport Measurements from './components/references/measurements';\nimport Scoring from './components/references/scoring';\nimport Submissions from './components/references/submissions';\nimport References from './components/references/references';\n\n// Resources and Support\nimport FrequentlyAskedQuestions from './components/resources-and-support/frequently-asked-questions';\nimport Help from './components/resources-and-support/help';\nimport TermsOfService from './components/resources-and-support/terms-of-service';\n\nexport interface IPath {\n  path: string;\n  exact: boolean;\n  linkText: string;\n  component: FunctionComponent;\n}\n\nexport interface IAllPath {\n  groupTitle: string;\n  paths: IPath[];\n}\n\nconst topicsPaths: IPath[] = [\n  {\n    path: '/',\n    exact: true,\n    linkText: 'Introduction',\n    component: Introduction,\n  },\n  {\n    path: '/announcements',\n    exact: false,\n    linkText: 'Announcements',\n    component: Announcements,\n  },\n  {\n    path: '/change-log',\n    exact: false,\n    linkText: 'Change Log',\n    component: ChangeLog,\n  },\n  {\n    path: '/developer-preview',\n    exact: false,\n    linkText: 'Developer Preview',\n    component: DeveloperPreview,\n  },\n];\n\nconst guidesPaths: IPath[] = [\n  {\n    path: '/submitting-to-submissions-api',\n    exact: false,\n    linkText: 'Submitting to QPP using the Submission API',\n    component: SubmittingToQppSubmissionApi,\n  },\n  {\n    path: '/tutorial',\n    exact: false,\n    linkText: 'Tutorial: Create and score data via API',\n    component: BasicTutorial,\n  },\n  {\n    path: '/advanced-tutorial',\n    exact: false,\n    linkText: 'Tutorial: Add and update data via API',\n    component: AdvancedTutorial,\n  },\n  {\n    path: '/authorization-and-authentication',\n    exact: false,\n    linkText: 'Submissions API Authentication and Authorization',\n    component: AuthorizationAndAuthentication,\n  },\n  {\n    path: '/qualified-registries-and-qcdrs',\n    exact: false,\n    linkText: 'Qualified Registries and QCDRs',\n    component: QualifiedRegistriesAndQcdrs,\n  },\n  {\n    path: '/getting-started-with-oauth',\n    exact: false,\n    linkText: 'Getting Started Using QPP OAuth',\n    component: GettingStartedUsingQppOauth,\n  },\n];\n\nconst referencePaths: IPath[] = [\n  {\n    path: '/measurements',\n    exact: false,\n    linkText: 'Measurements',\n    component: Measurements,\n  },\n  {\n    path: '/measurement-sets',\n    exact: false,\n    linkText: 'Measurement Sets',\n    component: MeasurementSets,\n  },\n  {\n    path: '/submissions',\n    exact: false,\n    linkText: 'Submissions',\n    component: Submissions,\n  },\n  {\n    path: '/benchmarks',\n    exact: false,\n    linkText: 'Benchmarks',\n    component: Benchmarks,\n  },\n  {\n    path: '/scoring',\n    exact: false,\n    linkText: 'Scoring',\n    component: Scoring,\n  },\n  {\n    path: '/references',\n    exact: false,\n    linkText: 'References',\n    component: References,\n  },\n];\n\nconst resourcesAndSupport: IPath[] = [\n  {\n    path: '/frequently-asked-questions',\n    exact: false,\n    linkText: 'Frequently Asked Questions',\n    component: FrequentlyAskedQuestions,\n  },\n  {\n    path: '/help',\n    exact: false,\n    linkText: 'Help',\n    component: Help,\n  },\n  {\n    path: '/terms-of-service',\n    exact: false,\n    linkText: 'Terms of Service',\n    component: TermsOfService,\n  },\n];\n\nconst allPaths: IAllPath[] = [\n  {\n    groupTitle: 'TOPICS',\n    paths: topicsPaths,\n  },\n  {\n    groupTitle: 'GUIDES',\n    paths: guidesPaths,\n  },\n  {\n    groupTitle: 'REFERENCES',\n    paths: referencePaths,\n  },\n  {\n    groupTitle: 'RESOURCES AND SUPPORT',\n    paths: resourcesAndSupport,\n  },\n];\n\nexport const combinedRoutes = allPaths.reduce((acc: IPath[], cur) => {\n  cur.paths.forEach((p) => acc.push(p));\n\n  return acc;\n}, []);\n\nexport default allPaths;\n","import React from 'react';\n\nimport { DataModelTable, LinkToId, ExternalLink, CodeTab } from '../../../shared';\nimport { measurementsTitleAndId, measurementsTabs, measurementsFields } from './data';\nimport envConfig from '../../../envConfig';\n\nconst Measurements = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 01/21/2022</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Measurements</h2>\n      <ul>\n        {Object.entries(measurementsTitleAndId).map(([title, id], i) =>\n          <li key={i}>\n            <LinkToId to={`#${id}`} text={title} />\n          </li>,\n        )}\n      </ul>\n      <p className='ds-text--lead'>\n        The Measurements resource represents performance data for a specific measure within a MeasurementSet. There are five types of Measurements: Boolean, Proportion, Non-Proportion, Single-Performance Rate, and Multi-Performance Rate. Each MeasurementSet can have multiple Measurements. No two Measurements in a given MeasurementSet can have the same measureId.\n      </p>\n      <p className='ds-text--lead'>\n        <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs/#/Measurements`} text='Try it out!' />\n      </p>\n\n      <CodeTab data={measurementsTabs.fields} />\n      <DataModelTable data={measurementsFields.fields} />\n\n      <h2 className='ds-h2' id={measurementsTitleAndId.Boolean}>Boolean Measurements</h2>\n      <p className='ds-text--lead'>\n        Boolean Measurements are applicable to Improvement Activity (IA) and Promoting Interoperability (PI) measures. For PI Measures, if a measure has an Exclusion measure ID listed, this means that the Exclusion measure ID cannot be submitted in the same Measurement Set as the original measure because they have opposite meanings and cannot both be true.\n      </p>\n      <CodeTab data={measurementsTabs.boolean} />\n      <DataModelTable data={measurementsFields.boolean} />\n\n      <h2 className='ds-h2' id={measurementsTitleAndId.Proportion}>Proportion Measurements</h2>\n      <p className='ds-text--lead'>\n        Proportion Measurements are applicable to Promoting Interoperability (PI) measures. For PI Measures, if a measure has an Exclusion measure ID listed, this means that the Exclusion measure ID cannot be submitted in the same Measurement Set as the original measure because they have opposite meanings and cannot both be true.\n      </p>\n      <CodeTab data={measurementsTabs.proportion} />\n      <DataModelTable data={measurementsFields.proportion} />\n\n      <h2 className='ds-h2' id={measurementsTitleAndId['Non-Proportion']}>Non-Proportion Measurements</h2>\n      <p className='ds-text--lead'>\n        Non-Proportion Measurements are applicable to quality measures. Most are authored by QCDRs and are used to attest to measures that are otherwise categorized as 'ratio', 'continuous variable', or a combination of 'proportion' and the former. Note this means that having a false value in the proportion field of QCDR documentation is sufficient to determine that a measure as non-proportional, but having a true value for proportion is insufficient to determine that measure as proportional. Non-proportion measurements are unconstrained, so while the fields are 'numerator' and 'denominator' there is no validation that the numerator must be less than or equal to the denominator or that the denominator is greater than 0, as is the case for proportion measurements.\n      </p>\n      <CodeTab data={measurementsTabs.nonProportion} />\n      <DataModelTable data={measurementsFields.nonProportion} />\n\n      <h2 className='ds-h2' id={measurementsTitleAndId['Single-Performance Rate']}>Single-Performance Rate Measurements</h2>\n      <p className='ds-text--lead'>\n        Single-Performance Rate Measurements are applicable to Quality measures. There are two types of Single-Performance Rate Measurements: registry and normal. The difference between the two is that for Registry Single-Performance Rate Measurements, the performanceRate field is both writable and required.\n      </p>\n      <CodeTab data={measurementsTabs.singlePerformanceRate} />\n      <DataModelTable data={measurementsFields.singlePerformanceRate} />\n\n      <h2 className='ds-h2' id={measurementsTitleAndId['Multi-Performance Rate']}>Multi-Performance Rate Measurements</h2>\n      <p className='ds-text--lead'>\n        Multi-Performance Rate Measurements are applicable to Quality measures. There are two types of Multi-Performance Rate Measurements: registry and normal. The difference between the two is that for Registry Multi-Performance Rate Measurements, the performanceRate field is both writable and required. Multi-Performance Rate Measurements contain multiple strata and the stratum field is required for each.\n      </p>\n      <CodeTab data={measurementsTabs.multiPerformanceRate} />\n      <DataModelTable data={measurementsFields.multiPerformanceRate} />\n\n      <h2 className='ds-h2' id={measurementsTitleAndId['Multi-Performance Rate Stratum']}>Multi-Performance Rate Stratum</h2>\n      <p className='ds-text--lead'>\n        A Multi-Performance Rate Stratum represents the performance data for a specified subset of the population, as described by the stratum field.\n      </p>\n      <CodeTab data={measurementsTabs.stratum} />\n      <DataModelTable data={measurementsFields.stratum} />\n    </>\n  );\n};\n\nexport default Measurements;\n","import React from 'react';\n\nimport { ExternalLink, DataModelTable, CodeTab } from '../../../shared';\nimport envConfig from '../../../envConfig';\nimport { measurementSetsFields, measurementSetsTabs, measurementSetPracticeDetails } from './data';\n\nconst MeasurementSets = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 01/18/2022</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Measurement Sets</h2>\n      <p className='ds-text--lead'>\n        The MeasurementSets resource represents performance data for a specified category. Each Submission can have multiple MeasurementSets. Each MeasurementSet in a given Submission is uniquely identified by category, submission method, and programName. MeasurementSets contain Measurements, which can be accessed both via MeasurementSets methods and Measurements methods.\n        </p>\n      <p className='ds-text--lead'>\n        <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs/#/MeasurementSets`} text='Try it out!' />\n      </p>\n\n      <CodeTab data={measurementSetsTabs.fields} />\n      <DataModelTable data={measurementSetsFields.fields} />\n      <h2\n        className='ds-h2'\n        id={measurementSetPracticeDetails['Practice Details']}\n      >\n        Practice Details\n      </h2>\n      <p className='ds-text--lead'>\n        The MeasurementSet property practiceDetails is an optional property only available when programName is set to \"pcf\".\n      </p>\n      <CodeTab data={measurementSetsTabs.practiceDetails} />\n      <DataModelTable data={measurementSetsFields.practiceDetails} />\n    </>\n  );\n};\n\nexport default MeasurementSets;\n","import React from 'react';\nimport { ExternalLink, CodeTab, DataModelTable } from '../../../shared';\nimport envConfig from '../../../envConfig';\nimport { submissionsTabs, submissionsFields } from './data';\n\nconst Submissions = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 06/08/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Submissions</h2>\n      <p className='ds-text--lead'>\n        The Submissions resource represents one year of performance data for a given individual or group. Submissions contain MeasurementSets which can be accessed both via Submissions methods and MeasurementSets methods.\n      </p>\n      <p className='ds-text--lead'>\n        Submissions resources are 'shared' in the sense that they contain Measurement Sets that may be created by multiple users.\n      </p>\n      <p className='ds-text--lead'>\n        <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs/#/Submissions`} text='Try it out!' />\n      </p>\n      <CodeTab data={submissionsTabs.fields} />\n      <DataModelTable data={submissionsFields.fields} />\n    </>\n  );\n};\n\nexport default Submissions;\n","\nimport { ExternalLink, CodeTab, DataModelTable } from '../../../shared';\nimport envConfig from '../../../envConfig';\nimport { benchmarksTabs, benchmarksFields } from './data';\n\nconst Benchmarks = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 07/01/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}} id='current-benchmarks'>Benchmarks</h2>\n      <p className='ds-text--lead'>\n        Benchmarks serve as the reference points for measurements and are used to score submissions. Each benchmark is unique based upon its combination of measureId, submissionMethod, and performanceYear, and each has a list of 9 data points.\n      </p>\n      <p>\n        Please see the <ExternalLink href={`${envConfig.amazoneawsUrl}/uploads/1275/2021%20MIPS%20Quality%20Benchmarks.zip`}\n        text='2021 Merit-based Incentive Payment System (MIPS) Quality Measure Benchmarks Overview' /> for more information on MIPS Quality Benchmarks.\n      </p>\n      <p>\n        You can view the benchmarks for a Performance Year using the publicly accessible <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs/#/Public%20Endpoints/listBenchmarks`} text='benchmarks endpoint' />.\n      </p>\n      <CodeTab data={benchmarksTabs.fields} />\n      <DataModelTable data={benchmarksFields.fields} />\n\n    </>\n  );\n};\n\nexport default Benchmarks;\n","import React from 'react';\n\nimport { ExternalLink } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst References = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 05/12/2021</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}} id='references'>References</h2>\n\n      <h3 className='ds-h3'>General References</h3>\n      <ul>\n        <li>\n          Resource Library: <ExternalLink href={`${envConfig.qppCmsUrl}/about/resource-library`} />\n        </li>\n      </ul>\n\n      <h3 className='ds-h3'>Submissions and Scoring API</h3>\n      <ul>\n        <li>\n          Interactive QPP Submissions API Documentation: <ExternalLink href={`${envConfig.qppCmsPreviewUrl}/api/submissions/public/docs`} />\n        </li>\n        <li>\n          Interactive QPP Scoring API Documentation: <ExternalLink href={`${envConfig.qppCmsUrl}/api/scoring/docs`} />\n        </li>\n        <li>\n          Measures, Activities, and Benchmarks Repository: <ExternalLink href={`https://github.com/CMSgov/qpp-measures-data`} />\n        </li>\n        <li>\n          Explore Measures page: <ExternalLink href={`${envConfig.qppCmsUrl}/mips/explore-measures/quality-measures`} />\n        </li>\n        <li>\n          QRDA III to JSON Conversion Tool in Production: <ExternalLink href={`https://github.com/CMSgov/qpp-conversion-tool`} />\n        </li>\n      </ul>\n\n      <h3 className='ds-h3'>Eligibility API</h3>\n      <ul>\n        <li>\n          QPP Participation Status Lookup Tool: <ExternalLink href={`${envConfig.qppCmsUrl}/participation-lookup`} />\n        </li>\n        <li>\n          Interactive QPP Eligibility API Documentation: <ExternalLink href={`${envConfig.qppCmsUrl}/api/eligibility/docs`} />\n        </li>\n      </ul>\n\n      <h3 className='ds-h3'>Authentication and Authorization API</h3>\n      <ul>\n        <li>\n          Interactive AUTH API Documentation: <ExternalLink href={`${envConfig.qppCmsUrl}/api/auth/docs`} />\n        </li>\n      </ul>\n\n      <h3 className='ds-h3'>CMS Web Interface API</h3>\n      <ul>\n        <li>\n          Interactive Web Interface Documentation: <ExternalLink href={`${envConfig.qppCmsUrl}/api/submissions/web-interface/docs`} />\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default References;\n","import React from 'react';\n\nimport { ExternalLink, LinkToId } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst Help = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 08/26/2020</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>Help</h2>\n\n      <p className='ds-text'>\n        Please contact the Quality Payment Program Service Center <ExternalLink href={`${envConfig.qppCmsUrl}/about/help-and-support`} /> if you have policy or API questions.\n        </p>\n\n      <p className='ds-text'>\n        For information around Quality Payment Program requirements, please visit <ExternalLink href={envConfig.qppCmsUrl} />\n      </p>\n\n      <p className='ds-text'>\n        For frequently asked questions regarding APIs please see the <LinkToId to='frequently-asked-questions' text='FAQ Section' />\n      </p>\n\n      <p className='ds-text'>\n        Please bring any questions not answered by our available documentation to the monthly support calls/Virtual Office Hours.  Or contact the Quality Payment Program service center: <ExternalLink href={`${envConfig.qppCmsUrl}/about/help-and-support`} />\n      </p>\n    </>\n  );\n};\n\nexport default Help;\n","import React from 'react';\n\nimport { ExternalLink } from '../../../shared';\nimport envConfig from '../../../envConfig';\n\nconst TermsOfService = () => {\n  return (\n    <>\n      <p className='qpp-docs-page-updated'>Last Updated: 08/26/2020</p> {/* IMPORTANT: update this Last-Updated value if you have made any changes to this page's content. */}\n      <h2 className='ds-h2' style={{marginTop: 0}}>API Terms of Service Agreement</h2>\n      <p className='ds-text'>\n        Thank you for using The Centers for Medicare and Medicaid Services (\"CMS\") APIs and other developer services (collectively, \"APIs\"). By accessing or using our APIs, you are agreeing to the terms below as well as any relevant sections of CMS's <ExternalLink href={`${envConfig.cmsUrl}/About-CMS/Agency-Information/Aboutwebsite/Privacy-Policy.html`} text='Website Policies' />.\n      </p>\n\n      <h3 className='ds-h3'>Scope</h3>\n      <p className='ds-text'>\n        The service (\"API\") through which you interact with CMS data is subject to these terms. Use of the API constitutes acceptance to these Terms.\n      </p>\n\n      <h3 className='ds-h3'>Data Rights and Usage</h3>\n\n      <h4 className='ds-h4'>Accounts/Registration</h4>\n      <p className='ds-text'>\n        If you are using the API on behalf of an entity, you represent and warrant that you have authority to bind that entity to the Terms and by accepting the Terms, you are doing so on behalf of that entity (and all references to \"you\" in the Terms refer to you and that entity).\n      </p>\n      <p className='ds-text'>\n        In order to access the API, you may be required to provide certain information (such as identification or contact details) as part of the registration process for the API, or as part of your continued use of the API. Any registration information you give to CMS must be accurate and up to date and you must inform us promptly of any updates so that we can keep you informed of any changes to the API or the Terms which may impact your usage of the API.\n      </p>\n      <p className='ds-text'>\n        Developer credentials (such as passwords, keys, tokens, and client IDs) are intended to be used only by you and identify any software which you are using with the APIs. You will keep your credentials confidential and make reasonable efforts to prevent and discourage other API Clients from using your credentials. Developer credentials may not be embedded in open source projects.\n      </p>\n      <p className='ds-text'>\n        You will only access (or attempt to access) an API by the means described in the documentation of that API. If CMS assigns you developer credentials (e.g., client IDs), you must use them with the applicable APIs.\n      </p>\n      <h4 className='ds-h4'>Attribution</h4>\n      <p className='ds-text'>\n        While not required, when using content, data, documentation, code, and related materials associated with the API in your own work, we ask that proper credit be given.\n      </p>\n\n      <h3 className='ds-h3'>Service Management</h3>\n\n      <h4 className='ds-h4'>Right to Limit</h4>\n      <p className='ds-text'>\n        Your use of the API may be subject to certain limitations on access, calls, or use as set forth within this Agreement or otherwise provided by CMS. These limitations are designed to manage the load on the system, promote equitable access, and prevent abuse, and these limitations may be adjusted without notice, as deemed necessary by CMS. If CMS reasonably believes that you have attempted to exceed or circumvent these limits, your ability to use the API may be temporarily or permanently blocked. CMS may monitor your use of the API to improve the service or to ensure compliance with this Agreement.\n      </p>\n\n      <h4 className='ds-h4'>Service Termination</h4>\n      <p className='ds-text'>\n        If you wish to terminate this Agreement, you may do so by refraining from further use of the API. CMS reserves the right (though not the obligation) to: (1) refuse to provide the API to you, if it is CMS's opinion that use violates any CMS policy; or (2) terminate or deny you access to and use of all or part of the API at any time for any other reason which in its sole discretion it deems necessary to in order to prevent abuse. You may petition CMS to regain access to the API through the support email address provided by CMS for the API. If CMS determines in its sole discretion that the circumstances which led to the refusal to provide the API or terminate access to the API are no longer in existence, then CMS may restore your access. All provisions of this Agreement shall survive termination including, without limitation, warranty disclaimers, and limitations of liability.\n      </p>\n\n      <h3 className='ds-h3'>Liability</h3>\n\n      <h4 className='ds-h4'>Disclaimer of Warranties</h4>\n      <p className='ds-text'>\n        The API platform is provided \"as is\" and on an \"as-available\" basis. While we will do our best to ensure the service is available and functional at all times, CMS hereby disclaim all warranties of any kind, express or implied, including without limitation the warranties of merchantability, fitness for a particular purpose, and non-infringement. CMS makes no warranty that data will be error free or that access thereto will be continuous or uninterrupted.\n      </p>\n\n      <h4 className='ds-h4'>Limitations on Liability</h4>\n      <p className='ds-text'>\n        In no event will CMS be liable with respect to any subject matter of this Agreement under any contract, negligence, strict liability or other legal or equitable theory for: (1) any special, incidental, or consequential damages; (2) the cost of procurement of substitute products or services; or (3) for interruption of use or loss or corruption of data.\n      </p>\n\n      <h3 className='ds-h3'>Disputes</h3>\n      <p className='ds-text'>\n        Any disputes arising out of this Agreement and access to or use of the API shall be governed by federal law.  Some APIs may have API specific Terms. If there is a conflict between these terms and additional terms applicable to a specific API, the additional terms will control for that conflict.\n      </p>\n\n      <h3 className='ds-h3'>No Waiver Rights</h3>\n      <p className='ds-text'>\n        CMS's failure to exercise or enforce any right or provision of this Agreement shall not constitute waiver of such right or provision.\n        </p>\n      <p className='ds-text'>\n        Return to the <ExternalLink href={`${envConfig.qppCmsUrl}/resources/developers`} text='QPP Developer Tools' />.\n      </p>\n    </>\n  );\n};\n\nexport default TermsOfService;\n","import React from 'react';\n\nimport envConfig from '../../envConfig';\n\nconst Header = () => {\n  return (\n    <header id='top'>\n      <nav className='navbar navbar-default navbar-fixed-top'>\n        <div className='ds-l-container'>\n          <div className='navbar-header'>\n            <div className='header-mobile-brand'>\n              <a className='header-brand' href={envConfig.qppCmsUrl} target='_blank' rel='noopener noreferrer'>\n                <img className='qpp-logo' src={`${envConfig.qppCmsUrl}/images/qpp_logo_rgb_color.png`} alt='qpp logo' />\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import { createBrowserHistory } from 'history';\n\nimport envConfig from './envConfig';\n\nexport default createBrowserHistory({\n  basename: envConfig.baseUrl,\n});\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport history from '../../history';\nimport { combinedRoutes } from '../routes';\n\nconst DropdownNav = () => {\n  return (\n    <form>\n      <select\n        className='ds-c-field ds-c-field--select'\n        value={history.location.pathname}\n        onChange={(e) => history.push(e.target.value)}\n      >\n        {combinedRoutes.map(({ path, linkText }, i) =>\n          <option\n            key={i}\n            value={path}\n          >\n            {linkText}\n          </option>,\n        )}\n      </select>\n    </form>\n  );\n};\n\nexport default withRouter(DropdownNav);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Routes, { IPath } from '../routes';\n\nimport '../../styles/components/left-nav.scss';\n\nconst leftNavPaddingClasses = 'ds-u-padding-right--3 ds-u-padding-left--3 ds-u-padding-top--1';\n\nconst scrollToTop = () => {\n  window.scroll({\n    top: 0,\n    left: 0,\n    behavior: 'smooth',\n  });\n};\n\nconst buildLinkListItem = ({ path, exact, linkText }: IPath) =>\n  <li\n    key={path}\n    className='ds-c-vertical-nav__item'\n    onClick={scrollToTop}\n  >\n    <NavLink\n      to={path}\n      exact={exact}\n      className={`ds-c-vertical-nav__label ${leftNavPaddingClasses}`}\n      activeClassName='ds-c-vertical-nav__label--current'\n    >\n      {linkText}\n    </NavLink>\n  </li>;\n\nconst LeftNav = () => {\n  return (\n    <ul className='ds-c-list--bare ds-u-padding-top--2'>\n      {Routes && Routes.map(({ groupTitle, paths }, i) =>\n        <li key={i}>\n          <ul className='ds-c-vertical-nav left-nav'>\n            <li className={`ds-c-vertical-nav__item ds-u-font-weight--semibold ${leftNavPaddingClasses}`}>\n              {groupTitle.toUpperCase()}\n            </li>\n            {paths.map((p) => buildLinkListItem(p))}\n          </ul>\n        </li>,\n      )}\n    </ul>\n  );\n};\n\nexport default LeftNav;\n","import React from 'react';\n\nimport envConfig from '../../envConfig';\nimport { ExternalLink } from '../../shared';\n\nimport '../../styles/components/footer.scss';\n\nconst Footer = ({ openModal }: { openModal: CallableFunction }) => {\n  return (\n    <footer>\n      <div className='ds-l-container'>\n        <div className='row'>\n          <div className='col-sm-8 col-md-9 col-lg-9'>\n            <div className='logo-container'>\n              <img className='qpp-logo' src={`${envConfig.qppCmsUrl}/images/qpp_logo_reversed.png`} alt='qpp logo' />\n            </div>\n            <ul>\n              <li>\n                <ExternalLink href={`${envConfig.qppCmsUrl}/developers`} text='Developer Tools' />\n              </li>\n              <li>\n                <ExternalLink href={`${envConfig.qppCmsUrl}/about/resource-library`} text='Resource Library' />\n              </li>\n              <li>\n                <a href={`mailto:${envConfig.qppEmail}`}>Send Us Questions</a>\n              </li>\n              <li>\n                <a href='#modal-subscribe' data-toggle='modal' data-target='#modal-subscribe' onClick={() => openModal()}>Subscribe to Updates</a>\n              </li>\n            </ul>\n            <ul className='small'>\n              <li>\n                <ExternalLink href={`${envConfig.qppCmsUrl}/privacy`} text='CMS Privacy Notice' />\n              </li>\n              <li>\n                <ExternalLink href={`${envConfig.qppCmsUrl}/accessibility`} text='Accessibility' />\n              </li>\n              <li>{envConfig.phoneNumber}</li>\n              <li>TTY: {envConfig.TTYPhoneNumber}</li>\n            </ul>\n          </div>\n          <div className='col-sm-4 col-md-3 col-lg-3'>\n            <div className='hhs-logo-container'>\n              <img alt='Center for Medicaid & Medicare Services' src={`${envConfig.qppCmsUrl}/images/hhs-logo-white.svg`} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nimport envConfig from '../../envConfig';\nimport { LockBodyScroll } from '../../shared';\n\nconst DELAY = 400;\n\nconst SubscribeModal = ({ closeModal }: { closeModal: CallableFunction }) => {\n  const [onModal, setOnModal] = useState(false);\n\n  const closeModalOnClickOutsideModal = () => {\n    if (!onModal) {\n      removeInClassAndClose();\n    }\n  };\n\n  // setTimeout is used here so that the css animation will run before the element is removed\n  const removeInClassAndClose = () => {\n    document.getElementById('modal-subscribe')?.classList.remove('in');\n    document.getElementById('modal-backdrop')?.classList.remove('in');\n    setTimeout(() => closeModal(), DELAY);\n  };\n\n  setTimeout(() => {\n    document.getElementById('modal-subscribe')?.classList.add('in');\n    document.getElementById('modal-backdrop')?.classList.add('in');\n  }, DELAY);\n\n  LockBodyScroll();\n\n  return (\n    <div id='modal-subscribe' className='modal fade show' tabIndex={-1} role='dialog' aria-labelledby='modal-subscribe-label' onClick={closeModalOnClickOutsideModal}>\n      <div className='modal-dialog modal-lg' onMouseEnter={() => setOnModal(true)} onMouseLeave={() => setOnModal(false)}>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <button className='close' type='button' data-dismiss='modal' aria-label='Close' onClick={() => removeInClassAndClose()}><span aria-hidden='true'>x</span></button>\n            <h4 className='modal-title' id='modal-subscribe-label'>Subscribe to Email Updates</h4>\n          </div>\n          <div className='modal-body'>\n            <div className='clearfix'>\n              <div className='pull-left'><img src={`${envConfig.qppCmsUrl}/images/cms-logo.png`} width='245' height='86' title='CMS Centers for Medicare &amp; Medicaid Services' alt='CMS Centers for Medicare &amp; Medicaid Services' /></div>\n              <div className='pull-left'>\n                <h5>Centers for Medicare &amp; Medicaid Services</h5>\n                <p className='small'><a href={envConfig.cmsUrl} target='_blank' rel='noopener noreferrer' aria-label='www.cms.gov This opens in a new window'>{envConfig.cmsUrl.slice(8)}&nbsp;</a>|&nbsp;<a href='https://www.medicaid.gov' target='_blank' rel='noopener noreferrer' aria-label='www.medicaid.gov This opens in a new window'>www.medicaid.gov&nbsp;</a>|&nbsp;<a href='https://www.medicare.gov' target='_blank' rel='noopener noreferrer' aria-label='www.medicare.gov This opens in a new window'>www.medicare.gov</a></p>\n              </div>\n            </div>\n            <form target='_blank' action='https://public.govdelivery.com/accounts/USCMS/subscriber/qualify' acceptCharset='UTF-8' method='get' id='subscribe-submit-form'>\n              <input type='hidden' name='topic_id' value='USCMS_12196' />\n              <h3>Email Updates</h3>\n              <p>To sign up for updates or to access your subscriber preferences, please enter your contact information below.</p>\n              <div className='row'>\n                <div className='col-sm-6 form-group'><label className='control-label' htmlFor='email'>* Email Address</label><input className='form-control' id='email' type='email' name='email' /></div>\n                <div className='col-sm-12'><button className='btn btn-primary js-subscribe-submit' type='submit' name='commit' >Submit</button><br /><br /><button className='btn btn-tertiary' type='button' data-dismiss='modal' onClick={() => removeInClassAndClose()}>Cancel</button></div>\n              </div>\n              <div className='row'>\n                <div className='col-sm-12'>\n                  <div className='modal-subscribe-footer'>\n                    <p className='small'>Your contact information is used to deliver requested updates or to access your subscriber preferences.</p>\n                    <hr />\n                    <a target='_blank' rel='noopener noreferrer' href={`${envConfig.cmsUrl}/About-CMS/Agency-Information/Aboutwebsite/Privacy-Policy.html`} aria-label='Privacy Policy. This opens in a new window'>Privacy Policy</a>&nbsp;<a target='_blank' rel='noopener noreferrer' href='https://subscriberhelp.govdelivery.com/hc/en-us' aria-label='Help. This opens in a new window'>Help</a>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubscribeModal;\n","import { useLayoutEffect } from 'react';\n\nexport const LockBodyScroll = () => {\n  useLayoutEffect((): any => {\n    const currentOverflowProp = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = 'hidden';\n\n    return () => document.body.style.overflow = currentOverflowProp;\n  }, []);\n};\n","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { combinedRoutes } from '../routes';\n\nimport Header from './header';\nimport DropdownNav from './dropdown-nav';\nimport LeftNav from './left-nav';\nimport Footer from './footer';\nimport SubscribeModal from './subscribe-modal';\nimport envConfig from '../../envConfig';\nimport { ExternalLink } from '../../shared';\n\nconst App = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <main id='panel'>\n        <Header />\n\n        <div className='qpp-docs-title-container'>\n          <div className='ds-l-container'>\n            <ExternalLink href={`${envConfig.qppCmsUrl}/developers`} text='&lt; back to QPP Developer Tools' attrs={{ className: 'qpp-docs-title-back'}} />\n            <h3 className='qpp-docs-title-text'>QPP Submissions API Documentation</h3>\n          </div>\n        </div>\n\n        <div className='ds-l-container'>\n          <div className='ds-l-row'>\n\n            <div className='ds-l-col--12 ds-u-padding-top--3 ds-u-display--block ds-u-sm-display--none'>\n              <DropdownNav />\n            </div>\n\n            <div className='ds-l-col--3 ds-u-padding-top--4 ds-u-display--none ds-u-sm-display--block'>\n              <div className='content-block'>\n                <LeftNav />\n              </div>\n            </div>\n\n            <div className='ds-u-padding-top--4 ds-l-col--12 ds-l-sm-col--9'>\n              <div className='content-block ds-u-padding--3'>\n                {combinedRoutes.map(({ path, exact, component }, i) => (\n                  <Route\n                    key={i}\n                    path={path}\n                    exact={exact}\n                    component={component}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Footer openModal={() => setShowModal(true)} />\n      </main>\n\n      {showModal &&\n        <>\n          <SubscribeModal closeModal={() => setShowModal(false)} />\n          <div id='modal-backdrop' className='modal-backdrop fade' />\n        </>\n      }\n    </>\n  );\n};\n\nexport default App;\n","// @ts-nocheck\nimport './polyfills';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './app/components/app';\nimport history from './history';\nimport envConfig from './envConfig';\n\nimport './index.scss';\n\n/* eslint-disable */\nconst initGA = (appHistory: History) => {\n  (function (i, s, o, g, r, a, m) {\n    // tslint:disable-next-line: only-arrow-functions\n    i.GoogleAnalyticsObject = r; i[r] = i[r] || function () {\n      (i[r].q = i[r].q || []).push(arguments)\n    }, i[r].l = 1 * new Date(); a = s.createElement(o),\n      m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)\n  })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n\n  // allow cross-domain tracking from qpp.cms.gov to cmsgov.github.io\n  window.ga('create', 'UA-15356370-63', 'auto', { 'allowLinker': true });\n  window.ga('require', 'linker');\n  window.ga('linker:autoLink', ['qpp.cms.gov'], true);\n\n  appHistory.listen((location) => {\n    window.ga('send', 'pageview', envConfig.baseUrl + location.pathname);\n  });\n};\n/*eslint-enable */\n\ninitGA(history);\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}