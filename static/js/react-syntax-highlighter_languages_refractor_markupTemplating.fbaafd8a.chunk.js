(this["webpackJsonpqpp-submissions-docs"]=this["webpackJsonpqpp-submissions-docs"]||[]).push([[81],{423:function(e,n,t){"use strict";function a(e){!function(e){function n(e,n){return"___"+e.toUpperCase()+n+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(t,a,o,s){if(t.language===a){var r=t.tokenStack=[];t.code=t.code.replace(o,(function(e){if("function"===typeof s&&!s(e))return e;for(var o,i=r.length;-1!==t.code.indexOf(o=n(a,i));)++i;return r[i]=e,o})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,a){if(t.language===a&&t.tokenStack){t.grammar=e.languages[a];var o=0,s=Object.keys(t.tokenStack);!function r(i){for(var c=0;c<i.length&&!(o>=s.length);c++){var p=i[c];if("string"===typeof p||p.content&&"string"===typeof p.content){var u=s[o],g=t.tokenStack[u],l="string"===typeof p?p:p.content,f=n(a,u),k=l.indexOf(f);if(k>-1){++o;var m=l.substring(0,k),d=new e.Token(a,e.tokenize(g,t.grammar),"language-"+a,g),h=l.substring(k+f.length),y=[];m&&y.push.apply(y,r([m])),y.push(d),h&&y.push.apply(y,r([h])),"string"===typeof p?i.splice.apply(i,[c,1].concat(y)):p.content=y}}else p.content&&r(p.content)}return i}(t.tokens)}}}})}(e)}e.exports=a,a.displayName="markupTemplating",a.aliases=[]}}]);
//# sourceMappingURL=react-syntax-highlighter_languages_refractor_markupTemplating.fbaafd8a.chunk.js.map